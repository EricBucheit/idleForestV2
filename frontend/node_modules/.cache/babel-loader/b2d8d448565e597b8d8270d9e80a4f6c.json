{"ast":null,"code":"import { buttons as buttonImg } from '../../../../../Images';\nimport Render from '../../Render';\nimport { RigidBody, ClickHandler } from '../../../Helpers';\nexport default class Letters {\n  constructor() {\n    this.makeLetterButtons();\n  }\n\n  letter(x, y, w, h, letter) {\n    let button = {\n      clickHandler: new ClickHandler(),\n      img: buttonImg.greenButton,\n      draw: new Render(),\n      body: new RigidBody({\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }),\n      info: letter,\n      display: function (ctx) {\n        this.draw.img(this.img, this.body.pos.x, this.body.pos.y, this.body.size.x, this.body.size.y, ctx);\n        this.draw.textLine(this.info, this.body.pos.x + 10, this.body.pos.y + 20, 15, ctx, \"red\");\n      },\n      onClick: function (mouse, canvas) {\n        let click = this.clickHandler.click(mouse, this, canvas);\n\n        if (click) {\n          return this.info;\n        }\n\n        return false;\n      }\n    };\n    return button;\n  }\n\n  makeLetterButtons() {\n    let line1 = [\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"];\n    let line2 = [\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"];\n    let line3 = [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"];\n    let letters = [];\n\n    for (let x = 0; x < line1.length; x++) {\n      letters.push(this.letter(x * 45 + 20, 150, 40, 40, line1[x]));\n    }\n\n    for (let x = 0; x < line2.length; x++) {\n      letters.push(this.letter(x * 45 + 40, 200, 40, 40, line2[x]));\n    }\n\n    for (let x = 0; x < line3.length; x++) {\n      letters.push(this.letter(x * 45 + 70, 250, 40, 40, line3[x]));\n    }\n\n    this.letters = letters;\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/idleForestV2/frontend/src/Components/Canvas/Draw/UI/StartScreen/letters.js"],"names":["buttons","buttonImg","Render","RigidBody","ClickHandler","Letters","constructor","makeLetterButtons","letter","x","y","w","h","button","clickHandler","img","greenButton","draw","body","width","height","info","display","ctx","pos","size","textLine","onClick","mouse","canvas","click","line1","line2","line3","letters","length","push"],"mappings":"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","sourcesContent":["import {buttons as buttonImg} from '../../../../../Images'\nimport Render from '../../Render'\nimport {RigidBody, ClickHandler} from '../../../Helpers'\n\nexport default class Letters {\n\tconstructor() {\n\t\tthis.makeLetterButtons();\n\t}\n\n\tletter(x,y,w,h, letter) {\n\t\t\tlet button = {\n\t\t\t\tclickHandler : new ClickHandler(),\n\t\t\t\timg : buttonImg.greenButton,\n\t\t\t\tdraw : new Render(),\n\t\t\t\tbody : new RigidBody({x: x, y: y, width: w, height: h}),\n\t\t\t\tinfo : letter,\n\t\t\t\tdisplay : function(ctx) {\n\t\t\t\t\tthis.draw.img(this.img, this.body.pos.x, this.body.pos.y, this.body.size.x, this.body.size.y, ctx);\n\t\t\t\t\tthis.draw.textLine(this.info, this.body.pos.x + 10, this.body.pos.y + 20, 15, ctx, \"red\")\n\t\t\t\t},\n\t\t\t\tonClick : function(mouse, canvas) {\n\t\t\t\t\tlet click = this.clickHandler.click(mouse, this, canvas);\n\t\t\t\t\tif (click) {\n\t\t\t\t\t\treturn this.info;\n\t\t\t\t\t}\n\t\t\t\t\treturn(false)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn button\n\t\t}\n\n\t\tmakeLetterButtons() {\n\t\t\tlet line1 = [\"q\",\"w\",\"e\",\"r\",\"t\",\"y\",\"u\",\"i\",\"o\",\"p\"]\n\t\t\tlet line2 = [\"a\",\"s\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\"]\n\t\t\tlet line3 = [\"z\",\"x\",\"c\",\"v\",\"b\",\"n\",\"m\"]\n\t\t\tlet letters = []\n\n\t\t\tfor (let x = 0; x < line1.length; x++) {\n\t\t\t\tletters.push(this.letter((x * 45) + 20, 150 ,40,40, line1[x]));\n\t\t\t}\n\t\t\tfor (let x = 0; x < line2.length; x++) {\n\t\t\t\tletters.push(this.letter((x * 45) + 40, 200 ,40,40, line2[x]));\n\t\t\t}\n\t\t\tfor ( let x = 0; x < line3.length; x++) {\n\t\t\t\tletters.push(this.letter((x * 45) + 70, 250 ,40,40, line3[x]));\n\t\t\t}\n\t\t\tthis.letters = letters\n\t\t}\n\n}"]},"metadata":{},"sourceType":"module"}