{"ast":null,"code":"import { background, buttons } from '../../../../../Images';\nimport Grid from '../../Grid';\nimport Render from '../../Render';\nimport itemImages from \"../../../../../Images/itemImages\";\nexport default class Inventory {\n  constructor() {\n    this.render = new Render();\n    this.grid = this.makeInventorySlots();\n  }\n\n  draw(canvas, player) {\n    this.inventoryBackground(canvas);\n    this.grid.drawGrid(canvas.ctx);\n    this.grid.drawItems(player.inventory, canvas);\n    this.drawSwapItem(canvas, player);\n    this.drawDoubleClickMenu(canvas, player);\n  }\n\n  drawDoubleClickMenu(canvas, player) {\n    if (player.dblClickMenu) {\n      let dblClickMenu = player.dblClickMenu;\n      canvas.ctx.globalAlpha = 0.8;\n      this.render.img(buttons.aquaButton, dblClickMenu.ten.pos.x, dblClickMenu.ten.pos.y, dblClickMenu.ten.size.x, dblClickMenu.ten.size.y, canvas.ctx);\n      this.render.img(buttons.aquaButton, dblClickMenu.fifty.pos.x, dblClickMenu.fifty.pos.y, dblClickMenu.fifty.size.x, dblClickMenu.fifty.size.y, canvas.ctx);\n      this.render.img(buttons.aquaButton, dblClickMenu.all.pos.x, dblClickMenu.all.pos.y, dblClickMenu.all.size.x, dblClickMenu.all.size.y, canvas.ctx);\n      canvas.ctx.globalAlpha = 1.0;\n      this.render.text('10', dblClickMenu.ten.pos.x + 20, dblClickMenu.ten.pos.y + 15, 10, canvas.ctx);\n      this.render.text('50', dblClickMenu.fifty.pos.x + 20, dblClickMenu.fifty.pos.y + 15, 10, canvas.ctx);\n      this.render.text('All', dblClickMenu.all.pos.x + 20, dblClickMenu.all.pos.y + 15, 10, canvas.ctx);\n    }\n  }\n\n  drawSwapItem(canvas, player) {\n    if (player.mousePos) {\n      if (player.sortItem && player.sortItem.menu === \"inventory\") {\n        let category = player.inventory[player.sortItem.index].category;\n        let img = player.inventory[player.sortItem.index].img;\n\n        if (category && img) {\n          this.render.img(itemImages[category][img], player.mousePos.x - 16, player.mousePos.y - 16, 32, 32, canvas.ctx);\n        }\n      }\n    }\n  }\n\n  inventoryBackground(canvas) {\n    this.render.img(background.stats, 360, 0, 120, 480, canvas.ctx);\n  }\n\n  makeInventorySlots() {\n    let img = {\n      image: background.itemBorder,\n      repeat: true\n    };\n    let inventorySpaces = new Grid({\n      x: 365,\n      y: 120,\n      width: 3,\n      height: 8,\n      cellWidth: 40,\n      cellHeight: 40,\n      labelOffsetX: 5,\n      labelOffsetY: 5,\n      labelSize: 10,\n      imgs: img\n    });\n    return inventorySpaces;\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/Projects/idleForestV2/frontend/src/Components/Canvas/Draw/UI/Inventory/index.js"],"names":["background","buttons","Grid","Render","itemImages","Inventory","constructor","render","grid","makeInventorySlots","draw","canvas","player","inventoryBackground","drawGrid","ctx","drawItems","inventory","drawSwapItem","drawDoubleClickMenu","dblClickMenu","globalAlpha","img","aquaButton","ten","pos","x","y","size","fifty","all","text","mousePos","sortItem","menu","category","index","stats","image","itemBorder","repeat","inventorySpaces","width","height","cellWidth","cellHeight","labelOffsetX","labelOffsetY","labelSize","imgs"],"mappings":"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","sourcesContent":["import {background, buttons} from '../../../../../Images'\nimport Grid from '../../Grid'\nimport Render from '../../Render'\nimport itemImages from \"../../../../../Images/itemImages\"\n\n\nexport default class Inventory {\n\tconstructor() {\n\t\tthis.render = new Render();\n\t\tthis.grid = this.makeInventorySlots()\n\t}\n\n\tdraw(canvas, player) {\n\t\tthis.inventoryBackground(canvas)\n\t\tthis.grid.drawGrid(canvas.ctx);\n\t\tthis.grid.drawItems(player.inventory, canvas);\n\t\tthis.drawSwapItem(canvas, player)\n\t\tthis.drawDoubleClickMenu(canvas, player)\n\t}\n\n\tdrawDoubleClickMenu(canvas, player) {\n\t\t\tif (player.dblClickMenu) {\n\t\t\t\tlet dblClickMenu = player.dblClickMenu\n\t\t\t\n\t\t\t\tcanvas.ctx.globalAlpha = 0.8;\n\t\t\t\tthis.render.img(buttons.aquaButton, dblClickMenu.ten.pos.x, dblClickMenu.ten.pos.y, dblClickMenu.ten.size.x, dblClickMenu.ten.size.y, canvas.ctx)\n\t\t\t\tthis.render.img(buttons.aquaButton, dblClickMenu.fifty.pos.x, dblClickMenu.fifty.pos.y, dblClickMenu.fifty.size.x, dblClickMenu.fifty.size.y, canvas.ctx)\n\t\t\t\tthis.render.img(buttons.aquaButton, dblClickMenu.all.pos.x, dblClickMenu.all.pos.y, dblClickMenu.all.size.x, dblClickMenu.all.size.y, canvas.ctx)\n\t\t\t\tcanvas.ctx.globalAlpha = 1.0;\n\n\t\t\t\tthis.render.text('10', dblClickMenu.ten.pos.x + 20, dblClickMenu.ten.pos.y + 15, 10, canvas.ctx)\n\t\t\t\tthis.render.text('50', dblClickMenu.fifty.pos.x + 20, dblClickMenu.fifty.pos.y + 15, 10, canvas.ctx)\n\t\t\t\tthis.render.text('All', dblClickMenu.all.pos.x + 20, dblClickMenu.all.pos.y + 15, 10, canvas.ctx)\n\n\t\t}\n\n\t}\n\n\tdrawSwapItem(canvas, player) {\n\t\tif (player.mousePos) {\n\t\t\tif (player.sortItem && player.sortItem.menu === \"inventory\") {\n\t\t\t\tlet category = player.inventory[player.sortItem.index].category;\n\t\t\t\tlet img = player.inventory[player.sortItem.index].img;\n\t\t\t\tif (category && img) {\n\t\t\t\t\tthis.render.img(\n\t\t\t\t\t\titemImages[category][img], \n\t\t\t\t\t\tplayer.mousePos.x - 16, \n\t\t\t\t\t\tplayer.mousePos.y - 16,\n\t\t\t\t\t\t32, \n\t\t\t\t\t\t32, \n\t\t\t\t\t\tcanvas.ctx\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tinventoryBackground(canvas) {\n\t\tthis.render.img(background.stats, 360, 0, 120, 480, canvas.ctx)\n\t}\n\n\tmakeInventorySlots() {\n\t\t\tlet img = {\n\t\t\t\timage : background.itemBorder,\n\t\t\t\trepeat : true,\n\t\t\t}\n\n\t  \t\tlet inventorySpaces = new Grid({\n\t\t\t                                  x: 365,\n\t\t\t                                  y: 120,\n\t\t\t                                  width : 3,\n\t\t\t                                  height : 8,\n\t\t\t                                  cellWidth : 40,\n\t\t\t                                  cellHeight: 40,\n\t\t\t                                  labelOffsetX : 5,\n\t\t\t                                  labelOffsetY : 5,\n\t\t\t                                  labelSize : 10,\n\t\t\t                                  imgs : img,\n\t\t\t                                })\n\n\t  \t\treturn inventorySpaces;\n\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}