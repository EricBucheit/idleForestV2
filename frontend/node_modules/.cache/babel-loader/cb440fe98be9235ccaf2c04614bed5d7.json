{"ast":null,"code":"import { background, buttons } from '../../../../../../Images';\nimport itemImages from \"../../../../../../Images/itemImages\";\nimport Grid from '../../../Grid';\nimport Render from '../../../Render';\nexport default class Bank {\n  constructor() {\n    this.render = new Render();\n    this.grid = this.makeInventorySlots();\n  }\n\n  draw(canvas, player) {\n    this.bankBackGround(canvas);\n    this.grid.drawGrid(canvas.ctx);\n    this.bankButtons(canvas, player);\n    this.grid.drawItems(player.bank.items, canvas, player.bank.page);\n    this.drawSwapItem(canvas, player);\n    this.drawDoubleClickMenu(canvas, player);\n  }\n\n  bankBackGround(canvas) {\n    this.render.img(background.bankBackGround, 80, 10, 270, 420, canvas.ctx);\n  }\n\n  bankButtons(canvas, player) {\n    this.render.img(buttons.upArrow, 9.7 * 32, 32 * 11, 32, 32, canvas.ctx);\n    this.render.img(buttons.downArrow, 9.7 * 32, 32 * 12, 32, 32, canvas.ctx);\n    this.render.img(buttons.closeButton, 10 * 32, 32 * 1, 16, 16, canvas.ctx);\n    this.render.img(buttons.bankScrollBar, 10 * 32, 50 * (player.bank.index + 1) + 5, 16, 128, canvas.ctx);\n  }\n\n  drawDoubleClickMenu(canvas, player) {\n    if (player.dblClickMenu) {\n      let dblClickMenu = player.dblClickMenu;\n      canvas.ctx.globalAlpha = 0.8;\n      this.render.img(buttons.aquaButton, dblClickMenu.ten.pos.x, dblClickMenu.ten.pos.y, dblClickMenu.ten.size.x, dblClickMenu.ten.size.y, canvas.ctx);\n      this.render.img(buttons.aquaButton, dblClickMenu.fifty.pos.x, dblClickMenu.fifty.pos.y, dblClickMenu.fifty.size.x, dblClickMenu.fifty.size.y, canvas.ctx);\n      this.render.img(buttons.aquaButton, dblClickMenu.all.pos.x, dblClickMenu.all.pos.y, dblClickMenu.all.size.x, dblClickMenu.all.size.y, canvas.ctx);\n      canvas.ctx.globalAlpha = 1.0;\n      this.render.text('10', dblClickMenu.ten.pos.x + 20, dblClickMenu.ten.pos.y + 15, 10, canvas.ctx);\n      this.render.text('50', dblClickMenu.fifty.pos.x + 20, dblClickMenu.fifty.pos.y + 15, 10, canvas.ctx);\n      this.render.text('All', dblClickMenu.all.pos.x + 20, dblClickMenu.all.pos.y + 15, 10, canvas.ctx);\n    }\n  }\n\n  drawSwapItem(canvas, player) {\n    if (player.mousePos) {\n      if (player.sortItem && player.sortItem.menu === \"bank\") {\n        let category = player.bank.items[player.sortItem.index].category;\n        let img = player.bank.items[player.sortItem.index].img;\n\n        if (category && img) {\n          this.render.img(itemImages[category][img], player.mousePos.x - 16, player.mousePos.y - 16, 32, 32, canvas.ctx);\n        }\n      }\n    }\n  }\n\n  makeInventorySlots() {\n    let img = {\n      image: background.itemBorder,\n      repeat: true\n    };\n    let inventorySpaces = new Grid({\n      x: 90,\n      y: 20,\n      width: 5,\n      height: 10,\n      cellWidth: 40,\n      cellHeight: 40,\n      labelOffsetX: 5,\n      labelOffsetY: 5,\n      labelSize: 10,\n      imgs: img\n    });\n    return inventorySpaces;\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/idleForestV2/frontend/src/Components/Canvas/Draw/Level/Home/Bank/index.js"],"names":["background","buttons","itemImages","Grid","Render","Bank","constructor","render","grid","makeInventorySlots","draw","canvas","player","bankBackGround","drawGrid","ctx","bankButtons","drawItems","bank","items","page","drawSwapItem","drawDoubleClickMenu","img","upArrow","downArrow","closeButton","bankScrollBar","index","dblClickMenu","globalAlpha","aquaButton","ten","pos","x","y","size","fifty","all","text","mousePos","sortItem","menu","category","image","itemBorder","repeat","inventorySpaces","width","height","cellWidth","cellHeight","labelOffsetX","labelOffsetY","labelSize","imgs"],"mappings":"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","sourcesContent":["import {background, buttons} from '../../../../../../Images'\nimport itemImages from \"../../../../../../Images/itemImages\"\n\nimport Grid from '../../../Grid'\nimport Render from '../../../Render'\n\nexport default class Bank {\n\tconstructor() {\n\t\tthis.render = new Render();\n\t\tthis.grid = this.makeInventorySlots()\n\t}\n\n\tdraw(canvas, player) {\n\t\tthis.bankBackGround(canvas)\n\t\tthis.grid.drawGrid(canvas.ctx);\n\t\tthis.bankButtons(canvas, player)\n\t\tthis.grid.drawItems(player.bank.items, canvas, player.bank.page);\n\t\tthis.drawSwapItem(canvas, player)\n\t\tthis.drawDoubleClickMenu(canvas, player)\n\t\t\n\t}\n\n\tbankBackGround(canvas) {\n\t\tthis.render.img(background.bankBackGround, 80, 10, 270, 420, canvas.ctx)\n\t}\n\n\tbankButtons(canvas, player) {\n\t\tthis.render.img(buttons.upArrow, 9.7 * 32, 32 * 11, 32, 32, canvas.ctx)\n\t\tthis.render.img(buttons.downArrow, 9.7 * 32, 32 * 12, 32, 32, canvas.ctx)\n\t\tthis.render.img(buttons.closeButton, 10 * 32, 32 * 1, 16, 16, canvas.ctx)\n\t\tthis.render.img(buttons.bankScrollBar, 10 * 32, 50 * (player.bank.index + 1) + 5, 16, 128, canvas.ctx)\n\t}\n\n\tdrawDoubleClickMenu(canvas, player) {\n\t\tif (player.dblClickMenu) {\n\t\t\tlet dblClickMenu = player.dblClickMenu\n\t\t\t\n\n\n\t\t\tcanvas.ctx.globalAlpha = 0.8;\n\t\t\tthis.render.img(buttons.aquaButton, dblClickMenu.ten.pos.x, dblClickMenu.ten.pos.y, dblClickMenu.ten.size.x, dblClickMenu.ten.size.y, canvas.ctx)\n\t\t\tthis.render.img(buttons.aquaButton, dblClickMenu.fifty.pos.x, dblClickMenu.fifty.pos.y, dblClickMenu.fifty.size.x, dblClickMenu.fifty.size.y, canvas.ctx)\n\t\t\tthis.render.img(buttons.aquaButton, dblClickMenu.all.pos.x, dblClickMenu.all.pos.y, dblClickMenu.all.size.x, dblClickMenu.all.size.y, canvas.ctx)\n\t\t\tcanvas.ctx.globalAlpha = 1.0;\n\n\t\t\tthis.render.text('10', dblClickMenu.ten.pos.x + 20, dblClickMenu.ten.pos.y + 15, 10, canvas.ctx)\n\t\t\tthis.render.text('50', dblClickMenu.fifty.pos.x + 20, dblClickMenu.fifty.pos.y + 15, 10, canvas.ctx)\n\t\t\tthis.render.text('All', dblClickMenu.all.pos.x + 20, dblClickMenu.all.pos.y + 15, 10, canvas.ctx)\n\n\t\t}\n\n\n\t}\n\n\n\tdrawSwapItem(canvas, player) {\n\t\tif (player.mousePos) {\n\t\t\tif (player.sortItem && player.sortItem.menu === \"bank\") {\n\t\t\t\tlet category = player.bank.items[player.sortItem.index].category;\n\t\t\t\tlet img = player.bank.items[player.sortItem.index].img;\n\t\t\t\tif (category && img) {\n\t\t\t\t\tthis.render.img(\n\t\t\t\t\t\titemImages[category][img], \n\t\t\t\t\t\tplayer.mousePos.x - 16, \n\t\t\t\t\t\tplayer.mousePos.y - 16,\n\t\t\t\t\t\t32, \n\t\t\t\t\t\t32, \n\t\t\t\t\t\tcanvas.ctx\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmakeInventorySlots() {\n\t\t\tlet img = {\n\t\t\t\timage : background.itemBorder,\n\t\t\t\trepeat : true,\n\t\t\t}\n\n\t  \t\tlet inventorySpaces = new Grid({\n\t\t\t                                  x: 90,\n\t\t\t                                  y: 20,\n\t\t\t                                  width : 5,\n\t\t\t                                  height : 10,\n\t\t\t                                  cellWidth : 40,\n\t\t\t                                  cellHeight: 40,\n\t\t\t                                  labelOffsetX : 5,\n\t\t\t                                  labelOffsetY : 5,\n\t\t\t                                  labelSize : 10,\n\t\t\t                                  imgs : img,\n\t\t\t                                })\n\n\t  \t\treturn inventorySpaces;\n\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}