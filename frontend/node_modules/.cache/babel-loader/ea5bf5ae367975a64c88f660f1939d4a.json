{"ast":null,"code":"export default class InputHandler {\n  transformedCoordinate(mouse, canvas) {\n    var transformedClickX = mouse.pageX - canvas.offsetLeft;\n    var transformedClickY = mouse.pageY - canvas.offsetTop;\n    return {\n      x: transformedClickX,\n      y: transformedClickY\n    };\n  }\n\n  Click(e, canvas, socket) {\n    let click = this.transformedCoordinate(e, canvas);\n    socket.emit('mouseClick', click.x, click.y);\n  }\n\n  MouseMove(e, canvas, socket, mouseOffset) {\n    let click = this.transformedCoordinate(e, canvas);\n    console.log(click, mouseOffset);\n    socket.emit('mouseMove', click.x, click.y);\n  }\n\n  RightClick(e, canvas, socket) {\n    let click = this.transformedCoordinate(e, canvas);\n    socket.emit('rightClick', click.x, click.y);\n  }\n\n  MouseDown(e, canvas, socket) {\n    let click = this.transformedCoordinate(e, canvas);\n    socket.emit('mouseDown', click.x, click.y);\n  }\n\n  MouseUp(e, canvas, socket) {\n    let click = this.transformedCoordinate(e, canvas);\n    socket.emit('mouseUp', click.x, click.y);\n  }\n\n  KeyPress(e, canvas, socket) {\n    socket.emit('keyPress', e.key);\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/Projects/idleForestV2/frontend/src/Components/InputHandlers/index.js"],"names":["InputHandler","transformedCoordinate","mouse","canvas","transformedClickX","pageX","offsetLeft","transformedClickY","pageY","offsetTop","x","y","Click","e","socket","click","emit","MouseMove","mouseOffset","console","log","RightClick","MouseDown","MouseUp","KeyPress","key"],"mappings":"AACA,eAAe,MAAMA,YAAN,CAAmB;AAE9BC,EAAAA,qBAAqB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACjC,QAAIC,iBAAiB,GAAGF,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG,UAA7C;AACA,QAAIC,iBAAiB,GAAGL,KAAK,CAACM,KAAN,GAAcL,MAAM,CAACM,SAA7C;AACA,WAAQ;AAACC,MAAAA,CAAC,EAAGN,iBAAL;AAAwBO,MAAAA,CAAC,EAAGJ;AAA5B,KAAR;AACH;;AAEJK,EAAAA,KAAK,CAAEC,CAAF,EAAKV,MAAL,EAAaW,MAAb,EAAqB;AACnB,QAAIC,KAAK,GAAG,KAAKd,qBAAL,CAA2BY,CAA3B,EAA8BV,MAA9B,CAAZ;AACAW,IAAAA,MAAM,CAACE,IAAP,CAAY,YAAZ,EAA0BD,KAAK,CAACL,CAAhC,EAAmCK,KAAK,CAACJ,CAAzC;AACH;;AAEDM,EAAAA,SAAS,CAACJ,CAAD,EAAIV,MAAJ,EAAYW,MAAZ,EAAoBI,WAApB,EAAiC;AACtC,QAAIH,KAAK,GAAG,KAAKd,qBAAL,CAA2BY,CAA3B,EAA8BV,MAA9B,CAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ,EAAmBG,WAAnB;AACAJ,IAAAA,MAAM,CAACE,IAAP,CAAY,WAAZ,EAAyBD,KAAK,CAACL,CAA/B,EAAkCK,KAAK,CAACJ,CAAxC;AACH;;AAEDU,EAAAA,UAAU,CAACR,CAAD,EAAIV,MAAJ,EAAYW,MAAZ,EAAoB;AAC1B,QAAIC,KAAK,GAAG,KAAKd,qBAAL,CAA2BY,CAA3B,EAA8BV,MAA9B,CAAZ;AACAW,IAAAA,MAAM,CAACE,IAAP,CAAY,YAAZ,EAA0BD,KAAK,CAACL,CAAhC,EAAmCK,KAAK,CAACJ,CAAzC;AACH;;AAEDW,EAAAA,SAAS,CAACT,CAAD,EAAIV,MAAJ,EAAYW,MAAZ,EAAoB;AACzB,QAAIC,KAAK,GAAG,KAAKd,qBAAL,CAA2BY,CAA3B,EAA8BV,MAA9B,CAAZ;AACAW,IAAAA,MAAM,CAACE,IAAP,CAAY,WAAZ,EAAyBD,KAAK,CAACL,CAA/B,EAAkCK,KAAK,CAACJ,CAAxC;AACH;;AAEDY,EAAAA,OAAO,CAACV,CAAD,EAAIV,MAAJ,EAAYW,MAAZ,EAAoB;AACvB,QAAIC,KAAK,GAAG,KAAKd,qBAAL,CAA2BY,CAA3B,EAA8BV,MAA9B,CAAZ;AACAW,IAAAA,MAAM,CAACE,IAAP,CAAY,SAAZ,EAAuBD,KAAK,CAACL,CAA7B,EAAgCK,KAAK,CAACJ,CAAtC;AACH;;AAEDa,EAAAA,QAAQ,CAACX,CAAD,EAAIV,MAAJ,EAAYW,MAAZ,EAAoB;AACxBA,IAAAA,MAAM,CAACE,IAAP,CAAY,UAAZ,EAAwBH,CAAC,CAACY,GAA1B;AACH;;AApC6B","sourcesContent":["\nexport default class InputHandler {\n\n    transformedCoordinate(mouse, canvas) {\n        var transformedClickX = mouse.pageX - canvas.offsetLeft;\n        var transformedClickY = mouse.pageY - canvas.offsetTop;\n        return ({x : transformedClickX, y : transformedClickY})\n    }\n\n\tClick (e, canvas, socket) {\n        let click = this.transformedCoordinate(e, canvas)\n        socket.emit('mouseClick', click.x, click.y);\n    }\n\n    MouseMove(e, canvas, socket, mouseOffset) {\n        let click = this.transformedCoordinate(e, canvas)\n        console.log(click, mouseOffset)\n        socket.emit('mouseMove', click.x, click.y);\n    }\n\n    RightClick(e, canvas, socket) {\n        let click = this.transformedCoordinate(e, canvas)\n        socket.emit('rightClick', click.x, click.y);\n    }\n\n    MouseDown(e, canvas, socket) {\n        let click = this.transformedCoordinate(e, canvas)\n        socket.emit('mouseDown', click.x, click.y);\n    }\n\n    MouseUp(e, canvas, socket) {\n        let click = this.transformedCoordinate(e, canvas)\n        socket.emit('mouseUp', click.x, click.y);\n    }\n\n    KeyPress(e, canvas, socket) {\n        socket.emit('keyPress', e.key);\n    }\n}"]},"metadata":{},"sourceType":"module"}