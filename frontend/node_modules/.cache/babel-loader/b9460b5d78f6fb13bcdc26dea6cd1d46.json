{"ast":null,"code":"export default class Render {\n  equalLines(str, lines) {\n    str = str.split(\" \");\n    console.log(str.length);\n    console.log(Math.floor(str.length / 3));\n  }\n\n  text(str, x, y, size, ctx, color = \"white\") {\n    if (str.toString().length > 6 && parseInt(size) >= 10) {\n      x -= 6;\n    }\n\n    str = str.toString().split(' ');\n    ctx.strokeStyle = color;\n    ctx.font = size + \"px Comic Sans MS\";\n\n    for (let word in str) {\n      ctx.strokeText(str[word], x, y + word * 7);\n    }\n  }\n\n  textLine(str, x, y, size, ctx, color = \"white\") {\n    if (str.toString().length > 6 && parseInt(size) >= 10) {\n      x -= 6;\n    }\n\n    ctx.strokeStyle = color;\n    ctx.font = size + \"px Comic Sans MS\";\n    ctx.strokeText(str, x, y);\n  }\n\n  textLinesByLength(str, x, y, size, numToSplit, ctx, color = \"white\") {\n    let strChunks = this.equalLines(str); //   \tctx.strokeStyle = color\n    // ctx.font = size+\"px Comic Sans MS\";\n    // let y_offset = 0;\n    // for (let line in strChunks) {\n    // \tctx.strokeText(strChunks[line], x, y + (y_offset += 10));\n    // }\n  }\n\n  img(img, x, y, width, height, ctx) {\n    ctx.drawImage(img.img, img.pos.x, img.pos.y, img.pos.width, img.pos.height, x, y, width, height);\n  }\n\n  roundRect(x, y, w, h, r, ctx) {\n    ctx.fillStyle = 'rgba(16, 133, 26,0.9)';\n    if (w < 2 * r) r = w / 2;\n    if (h < 2 * r) r = h / 2;\n    ctx.beginPath();\n    ctx.moveTo(x + r, y);\n    ctx.arcTo(x + w, y, x + w, y + h, r);\n    ctx.arcTo(x + w, y + h, x, y + h, r);\n    ctx.arcTo(x, y + h, x, y, r);\n    ctx.arcTo(x, y, x + w, y, r);\n    ctx.closePath();\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/Projects/idleForestV2/frontend/src/Components/Canvas/Draw/Render/index.js"],"names":["Render","equalLines","str","lines","split","console","log","length","Math","floor","text","x","y","size","ctx","color","toString","parseInt","strokeStyle","font","word","strokeText","textLine","textLinesByLength","numToSplit","strChunks","img","width","height","drawImage","pos","roundRect","w","h","r","fillStyle","beginPath","moveTo","arcTo","closePath"],"mappings":"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","sourcesContent":["export default class Render {\n\n\tequalLines(str, lines) {\n\t\tstr = str.split(\" \");\n\t\tconsole.log(str.length)\n\t\tconsole.log(Math.floor(str.length / 3))\n\t}\n\n\ttext(str, x, y, size, ctx, color= \"white\") {\n\t\tif (str.toString().length > 6 && parseInt(size) >= 10) {\n\t\t\tx -= 6\n\t\t}\n\t\tstr = str.toString().split(' ');\n\n\t\tctx.strokeStyle = color\n\t\tctx.font = size+\"px Comic Sans MS\";\n\t\t\n\t\tfor (let word in str) {\n\t\t\tctx.strokeText(str[word], x, y + (word * 7));\n\t\t}\n    }\n\n    textLine(str, x, y, size, ctx, color= \"white\") {\n\t\tif (str.toString().length > 6 && parseInt(size) >= 10) {\n\t\t\tx -= 6\n\t\t}\n\n\t\tctx.strokeStyle = color\n\t\tctx.font = size+\"px Comic Sans MS\";\n\t\t\n\t\tctx.strokeText(str, x, y);\n\t\t\n    }\n\n    textLinesByLength(str, x, y, size, numToSplit, ctx, color= \"white\") {\n    \tlet strChunks = this.equalLines(str);\n  //   \tctx.strokeStyle = color\n\t\t// ctx.font = size+\"px Comic Sans MS\";\n\t\t// let y_offset = 0;\n\t\t// for (let line in strChunks) {\n\t\t// \tctx.strokeText(strChunks[line], x, y + (y_offset += 10));\n\t\t// }\n    }\n\n    img(img, x,y, width, height, ctx) {\n\t    ctx.drawImage(img.img, \n\t                  img.pos.x,\n\t                  img.pos.y, \n\t                  img.pos.width, \n\t                  img.pos.height,\n\t                  x,\n\t                  y,\n\t                  width,\n\t                  height\n\t                );\n\t}\n\n\troundRect(x, y, w, h, r, ctx) {\n\t\tctx.fillStyle = 'rgba(16, 133, 26,0.9)';\n\t  if (w < 2 * r) r = w / 2;\n\t  if (h < 2 * r) r = h / 2;\n\t  ctx.beginPath();\n\t  ctx.moveTo(x+r, y);\n\t  ctx.arcTo(x+w, y,   x+w, y+h, r);\n\t  ctx.arcTo(x+w, y+h, x,   y+h, r);\n\t  ctx.arcTo(x,   y+h, x,   y,   r);\n\t  ctx.arcTo(x,   y,   x+w, y,   r);\n\t  ctx.closePath();;\n\t}\n}"]},"metadata":{},"sourceType":"module"}