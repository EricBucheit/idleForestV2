{"ast":null,"code":"import Render from '../../Render';\nimport { itemImages } from '../../../../../Images';\nimport { canvasEntityOffset } from '../../../Helpers';\nexport default class MapItems {\n  constructor() {\n    this.render = new Render();\n  }\n\n  draw(canvas, inventory, player) {\n    if (!inventory) {\n      return false;\n    }\n\n    for (let item in inventory) {\n      let category = inventory[item].category;\n      let img = inventory[item].img;\n\n      if (!itemImages[category] || !itemImages[category][img]) {//if it doesn't exist then it show name, may implement later\n        // this.render.text(inventory[item].name, inventory[item].x, inventory[item].y, 7, canvas.ctx)\n      } else {\n        let offset = canvasEntityOffset(player, inventory[item].x, inventory[item].y, canvas);\n        this.render.img(itemImages[category][img], offset.x, offset.y, 16, 16, canvas.ctx);\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/Projects/idleForestV2/frontend/src/Components/Canvas/Draw/Level/MapItems/index.js"],"names":["Render","itemImages","canvasEntityOffset","MapItems","constructor","render","draw","canvas","inventory","player","item","category","img","offset","x","y","ctx"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,kBAAR,QAAiC,kBAAjC;AAEA,eAAe,MAAMC,QAAN,CAAe;AAE7BC,EAAAA,WAAW,GAAG;AACb,SAAKC,MAAL,GAAc,IAAIL,MAAJ,EAAd;AACA;;AAEDM,EAAAA,IAAI,CAACC,MAAD,EAASC,SAAT,EAAoBC,MAApB,EAA4B;AAC/B,QAAI,CAACD,SAAL,EAAgB;AACf,aAAO,KAAP;AACA;;AAED,SAAK,IAAIE,IAAT,IAAiBF,SAAjB,EAA4B;AAC3B,UAAIG,QAAQ,GAAGH,SAAS,CAACE,IAAD,CAAT,CAAgBC,QAA/B;AACA,UAAIC,GAAG,GAAGJ,SAAS,CAACE,IAAD,CAAT,CAAgBE,GAA1B;;AACA,UAAI,CAACX,UAAU,CAACU,QAAD,CAAX,IAAyB,CAACV,UAAU,CAACU,QAAD,CAAV,CAAqBC,GAArB,CAA9B,EAAyD,CACxD;AACA;AACA,OAHD,MAGO;AACN,YAAIC,MAAM,GAAGX,kBAAkB,CAACO,MAAD,EAASD,SAAS,CAACE,IAAD,CAAT,CAAgBI,CAAzB,EAA4BN,SAAS,CAACE,IAAD,CAAT,CAAgBK,CAA5C,EAA+CR,MAA/C,CAA/B;AACA,aAAKF,MAAL,CAAYO,GAAZ,CAAgBX,UAAU,CAACU,QAAD,CAAV,CAAqBC,GAArB,CAAhB,EAA2CC,MAAM,CAACC,CAAlD,EAAqDD,MAAM,CAACE,CAA5D,EAA+D,EAA/D,EAAmE,EAAnE,EAAuER,MAAM,CAACS,GAA9E;AACA;AACD;AACD;;AAtB4B","sourcesContent":["import Render from '../../Render'\nimport {itemImages} from '../../../../../Images'\nimport {canvasEntityOffset} from '../../../Helpers'\n\nexport default class MapItems {\n\n\tconstructor() {\n\t\tthis.render = new Render()\n\t}\n\n\tdraw(canvas, inventory, player) {\n\t\tif (!inventory) {\n\t\t\treturn false\n\t\t}\n\n\t\tfor (let item in inventory) {\n\t\t\tlet category = inventory[item].category;\n\t\t\tlet img = inventory[item].img;\n\t\t\tif (!itemImages[category] || !itemImages[category][img]) {\n\t\t\t\t//if it doesn't exist then it show name, may implement later\n\t\t\t\t// this.render.text(inventory[item].name, inventory[item].x, inventory[item].y, 7, canvas.ctx)\n\t\t\t} else {\n\t\t\t\tlet offset = canvasEntityOffset(player, inventory[item].x, inventory[item].y, canvas)\n\t\t\t\tthis.render.img(itemImages[category][img], offset.x, offset.y, 16, 16, canvas.ctx)\n\t\t\t}\n\t\t}\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}