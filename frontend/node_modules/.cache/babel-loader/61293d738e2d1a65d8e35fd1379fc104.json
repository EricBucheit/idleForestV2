{"ast":null,"code":"import Render from '../Draw/Render';\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nclass Vector2d {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n}\n\nclass RigidBody {\n  constructor(settings) {\n    this.pos = new Vector2d(settings.x, settings.y);\n    this.center = new Vector2d(settings.width / 2, settings.height / 2);\n    this.size = new Vector2d(settings.width, settings.height);\n    this.velocity = new Vector2d(settings.velocityX, settings.velocityY);\n    this.collision = new Collision();\n  }\n\n  collide(targetBody) {\n    return this.collision.box(this, targetBody);\n  }\n\n}\n\nclass Collision {\n  box(obj1, obj2) {\n    let collision = {\n      collide: false,\n      left: false,\n      right: false,\n      up: false,\n      down: false\n    };\n\n    if (obj1.pos.x < obj2.pos.x + obj2.size.x && obj1.pos.x + obj1.size.x > obj2.pos.x && obj1.pos.y < obj2.pos.y + obj2.size.y && obj1.pos.y + obj1.size.y > obj2.pos.y) {\n      collision.collide = true;\n\n      if (obj1.pos.x + obj1.size.x < obj2.pos.x + obj2.center.x) {\n        collision.right = true;\n      }\n\n      if (obj1.pos.x >= obj2.pos.x + obj2.center.x) {\n        collision.left = true;\n      }\n\n      if (obj1.pos.y + obj1.size.y < obj2.pos.y + obj2.center.y) {\n        collision.down = true;\n      }\n\n      if (obj1.pos.y > obj2.pos.y + obj2.center.y) {\n        collision.up = true;\n      }\n\n      return collision;\n    }\n\n    return collision;\n  }\n\n}\n\nclass ClickHandler {\n  click(mouse, obj, canvas) {\n    let point = this.transformedCoordinate(mouse, canvas);\n    point = new RigidBody({\n      x: point.x,\n      y: point.y,\n      width: 1,\n      height: 1\n    });\n\n    if (point.collide(obj.body).collide) {\n      return true;\n    }\n\n    return false;\n  }\n\n  transformedCoordinate(mouse, canvas) {\n    var transformedClickX = mouse.pageX - canvas.offsetLeft;\n    var transformedClickY = mouse.pageY - canvas.offsetTop;\n    return {\n      x: transformedClickX,\n      y: transformedClickY\n    };\n  }\n\n}\n\nfunction Timer(time) {\n  let date = new Date();\n  let expiration = date.getTime() + time;\n  return {\n    date: date,\n    time: time,\n    expiration: expiration,\n    reset: function () {\n      let date = new Date();\n      let newTime = date.getTime();\n      this.expiration = newTime + this.time;\n    },\n\n    isDone() {\n      let date = new Date();\n      let newTime = date.getTime();\n\n      if (newTime > this.expiration) {\n        return true;\n      }\n\n      return false;\n    },\n\n    check: function () {\n      if (this.isDone()) {\n        this.reset();\n        return true;\n      }\n\n      return false;\n    },\n\n    getTimeLeft() {\n      let date = new Date();\n      let newTime = date.getTime();\n      return this.expiration - newTime;\n    },\n\n    setExpiration: function (newExpiration) {\n      this.time = newExpiration;\n      this.reset();\n    }\n  };\n}\n\nfunction userMessage(x = 175, y = 250) {\n  return {\n    button: button({\n      info: \"\",\n      pos: {\n        x: 175,\n        y: 250,\n        width: 100,\n        height: 100\n      },\n      text: {\n        x: 0,\n        y: 0,\n        fontsize: 20,\n        color: \"red\"\n      }\n    }),\n    timer: new Timer(5),\n    clear: true,\n    set: function (info) {\n      this.button.changeInfo(info);\n      this.button.body.pos.x = 175;\n      this.button.body.pos.y = 250;\n      this.clear = false;\n    },\n    warning: function (info) {\n      this.button.color = \"red\";\n      this.set(info);\n    },\n    success: function (info) {\n      this.button.color = \"blue\";\n      this.set(info);\n    },\n    clearWarning: function () {\n      this.button.changeInfo('');\n      this.button.body.pos.x = 160;\n      this.button.body.pos.y = 250;\n      this.clear = true;\n    },\n    display: function (ctx) {\n      if (this.clear === true) return false;\n      this.button.display(ctx);\n\n      if (this.timer.check()) {\n        this.button.body.pos.y -= 1;\n      }\n\n      if (this.button.body.pos.y <= 175) {\n        this.clearWarning();\n      }\n    }\n  };\n}\n\nfunction button(settings) {\n  let img = settings.img || false;\n  let info = settings.info || \"\";\n  let x = settings.pos.x || 0;\n  let y = settings.pos.y || 0;\n  let width = settings.pos.width || 200;\n  let height = settings.pos.height || 100;\n  let text = {\n    x: settings.text.x || 0,\n    y: settings.text.y || 0\n  };\n  let color = settings.text.color || \"white\";\n  let fontsize = settings.text.fontsize || 12;\n  return {\n    img: img,\n    color: color,\n    body: new RigidBody({\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }),\n    draw: new Render(),\n    clickHandler: new ClickHandler(),\n    info: info,\n    display: function (ctx) {\n      if (this.img) {\n        this.draw.img(this.img, this.body.pos.x, this.body.pos.y, this.body.size.x, this.body.size.y, ctx);\n      }\n\n      this.draw.textLine(this.info, this.body.pos.x + text.x, this.body.pos.y + text.y, fontsize, ctx, this.color);\n    },\n    onClick: function (mouse, canvas) {\n      let click = this.clickHandler.click(mouse, this, canvas);\n\n      if (click) {\n        return true;\n      }\n\n      return false;\n    },\n\n    changeInfo(info) {\n      this.info = info;\n    }\n\n  };\n}\n\nfunction canvasMapOffset(player, mapX, mapY, canvas) {\n  return {\n    x: mapX * 32 - player.body.pos.x + canvas.width / 2.7 - 320,\n    y: mapY * 32 - player.body.pos.y + canvas.height / 72.7 - 320\n  };\n}\n\nfunction canvasEntityOffset(player, x, y, canvas) {\n  return {\n    x: x - player.body.pos.x + canvas.width / 2.7,\n    y: y - player.body.pos.y + canvas.height / 2.7\n  };\n}\n\nexport { Vector2d, RigidBody, Timer, ClickHandler, userMessage, button, randomInt, canvasMapOffset, canvasEntityOffset };","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/Projects/idleForestV2/frontend/src/Components/Canvas/Helpers/index.js"],"names":["Render","randomInt","min","max","Math","floor","random","Vector2d","constructor","x","y","RigidBody","settings","pos","center","width","height","size","velocity","velocityX","velocityY","collision","Collision","collide","targetBody","box","obj1","obj2","left","right","up","down","ClickHandler","click","mouse","obj","canvas","point","transformedCoordinate","body","transformedClickX","pageX","offsetLeft","transformedClickY","pageY","offsetTop","Timer","time","date","Date","expiration","getTime","reset","newTime","isDone","check","getTimeLeft","setExpiration","newExpiration","userMessage","button","info","text","fontsize","color","timer","clear","set","changeInfo","warning","success","clearWarning","display","ctx","img","draw","clickHandler","textLine","onClick","canvasMapOffset","player","mapX","mapY","canvasEntityOffset"],"mappings":"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","sourcesContent":["import Render from '../Draw/Render'\n\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nclass Vector2d {\n\tconstructor(x,y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n}\n\n\nclass RigidBody {\n\tconstructor(settings) {\n\t\tthis.pos = new Vector2d(settings.x,settings.y);\n\t\tthis.center = new Vector2d(settings.width / 2, settings.height / 2);\n\t\tthis.size = new Vector2d(settings.width, settings.height);\n\t\tthis.velocity = new Vector2d(settings.velocityX, settings.velocityY);\n        this.collision = new Collision();\n\t}\n\n    collide(targetBody) {\n        return(this.collision.box(this, targetBody));\n    }\n\n\n}\n\nclass Collision {\n    box(obj1, obj2) {\n        let collision = {\n            collide : false,\n            left : false,\n            right: false,\n            up : false,\n            down : false\n        }\n        if (obj1.pos.x < obj2.pos.x + obj2.size.x &&\n           obj1.pos.x + obj1.size.x > obj2.pos.x &&\n           obj1.pos.y < obj2.pos.y + obj2.size.y &&\n           obj1.pos.y + obj1.size.y > obj2.pos.y) { \n                collision.collide = true;   \n                if (obj1.pos.x + obj1.size.x < obj2.pos.x + obj2.center.x) {\n                    collision.right = true;\n                }\n                if (obj1.pos.x >= obj2.pos.x + obj2.center.x) {\n                    collision.left = true;\n                }\n                if (obj1.pos.y + obj1.size.y < obj2.pos.y + obj2.center.y) {\n                    collision.down = true;\n                }\n                if (obj1.pos.y > obj2.pos.y + obj2.center.y) {\n                    collision.up = true;\n                }\n                return (collision);\n        }\n        return (collision);\n    }\n}\n\nclass ClickHandler {\n\n    click(mouse, obj, canvas) {\n        let point = this.transformedCoordinate(mouse, canvas)\n        point = new RigidBody({x: point.x, y: point.y, width: 1, height: 1})\n        if (point.collide(obj.body).collide) {\n            return true\n        }\n        return false\n    }\n\n    transformedCoordinate(mouse, canvas) {\n        var transformedClickX = mouse.pageX - canvas.offsetLeft;\n        var transformedClickY = mouse.pageY - canvas.offsetTop;\n        return ({x : transformedClickX, y : transformedClickY})\n    }\n\n}\n\nfunction Timer (time) {\n    let date = new Date();\n    let expiration = date.getTime() + time;\n    return ({\n            date : date,\n            time : time,\n            expiration: expiration,\n            \n            reset: function() {\n                let date = new Date();\n                let newTime = date.getTime()\n                this.expiration = newTime + this.time;\n            },\n\n            isDone() {\n                let date = new Date();\n                let newTime = date.getTime()\n                if (newTime > this.expiration) {\n                    return (true)\n                }\n                return false;\n            },\n\n            check : function() {\n                if (this.isDone()) {\n                    this.reset();\n                    return (true)\n                }\n                return false\n            },\n\n            getTimeLeft() {\n                let date = new Date();\n                let newTime = date.getTime()\n                return (this.expiration - newTime);\n            },\n\n            setExpiration : function(newExpiration) {\n                this.time = newExpiration;\n                this.reset()\n            }\n        })\n}\n\nfunction userMessage(x = 175, y = 250) {\n    return({\n            button : button({\n                info: \"\",\n                pos : {\n                    x: 175, \n                    y : 250, \n                    width: 100, \n                    height: 100,\n                },\n                text : {\n                    x: 0,\n                    y: 0,\n                    fontsize : 20,\n                    color: \"red\"\n                },\n            }),\n            timer : new Timer(5),\n            clear : true,\n            set : function(info) {\n                this.button.changeInfo(info)\n                this.button.body.pos.x = 175;\n                this.button.body.pos.y = 250;\n                this.clear = false\n            },\n\n            warning : function(info) {\n                this.button.color = \"red\";\n                this.set(info)\n            },\n\n            success : function(info) {\n                this.button.color = \"blue\";\n                this.set(info)\n            },\n\n            clearWarning : function () {\n                this.button.changeInfo('')\n                this.button.body.pos.x = 160;\n                this.button.body.pos.y = 250;\n                this.clear = true;\n            },\n\n            display : function(ctx) {\n                if (this.clear === true) return false\n                \n                this.button.display(ctx);\n                if (this.timer.check()) {\n                    this.button.body.pos.y -= 1;\n                }\n                if (this.button.body.pos.y <= 175) {\n                    this.clearWarning()\n                }\n            } \n        })\n}\n\nfunction button(settings) {\n    let img = settings.img || false;\n    let info = settings.info || \"\"\n    let x = settings.pos.x || 0;\n    let y = settings.pos.y || 0;\n    let width = settings.pos.width || 200;\n    let height = settings.pos.height || 100;\n    let text = {\n        x : settings.text.x || 0,\n        y : settings.text.y || 0,\n    }\n    let color = settings.text.color || \"white\"\n    let fontsize = settings.text.fontsize || 12;\n\n    return({\n        img : img,\n        color: color,\n        body : new RigidBody({x: x, y : y, width: width, height: height}),\n        draw : new Render(),\n        clickHandler : new ClickHandler(),\n        info: info,\n        display : function(ctx) {\n            if (this.img) {\n                this.draw.img(this.img, this.body.pos.x, this.body.pos.y, this.body.size.x, this.body.size.y, ctx);\n            }\n            this.draw.textLine(this.info, this.body.pos.x + text.x, this.body.pos.y + text.y, fontsize, ctx, this.color)\n        },\n        onClick : function (mouse, canvas) {\n            let click = this.clickHandler.click(mouse, this, canvas);\n            if (click) {\n                return true\n            }\n            return false;\n        },\n        changeInfo(info) {\n            this.info = info\n        }\n    })\n}\n\nfunction canvasMapOffset(player, mapX, mapY, canvas) {\n    return ({\n                x: ((mapX * 32 - player.body.pos.x) + canvas.width / 2.7) - 320,\n                y: ((mapY * 32 - player.body.pos.y) + canvas.height /72.7) - 320,\n            })\n}\n\nfunction canvasEntityOffset(player, x, y, canvas) {\n     return ({\n                x: ((x - player.body.pos.x) + canvas.width / 2.7),\n                y: ((y - player.body.pos.y) + canvas.height / 2.7),\n            })\n}\n\nexport {\n\tVector2d,\n\tRigidBody,\n\tTimer,\n    ClickHandler,\n    userMessage,\n    button,\n    randomInt,\n    canvasMapOffset,\n    canvasEntityOffset,\n}"]},"metadata":{},"sourceType":"module"}