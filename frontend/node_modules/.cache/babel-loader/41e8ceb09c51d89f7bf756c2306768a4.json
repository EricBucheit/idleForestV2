{"ast":null,"code":"export default class Render {\n  text(str, x, y, size, ctx, color = \"white\") {\n    if (str.toString().length > 6 && parseInt(size) >= 10) {\n      x -= 6;\n    }\n\n    str = str.toString().split(' ');\n    ctx.strokeStyle = color;\n    ctx.font = size + \"px Comic Sans MS\";\n\n    for (let word in str) {\n      ctx.strokeText(str[word], x, y + word * 7);\n    }\n  }\n\n  textLine(str, x, y, size, ctx, color = \"white\") {\n    if (str.toString().length > 6 && parseInt(size) >= 10) {\n      x -= 6;\n    }\n\n    ctx.strokeStyle = color;\n    ctx.font = size + \"px Comic Sans MS\";\n    ctx.strokeText(str, x, y);\n  }\n\n  textLinesByLength(str, x, y, size, lines, ctx, color = \"white\") {\n    str = str.split(\"\\n\");\n    ctx.strokeStyle = color;\n    ctx.font = size + \"px Comic Sans MS\";\n    let y_offset = 0;\n\n    for (let word in str) {\n      if (word % lines === 0) {\n        y_offset += 10;\n      }\n\n      ctx.strokeText(str[word], x, y + y_offset);\n    }\n  }\n\n  img(img, x, y, width, height, ctx) {\n    ctx.drawImage(img.img, img.pos.x, img.pos.y, img.pos.width, img.pos.height, x, y, width, height);\n  }\n\n  roundRect(x, y, w, h, r, ctx) {\n    ctx.fillStyle = 'rgba(16, 133, 26,0.9)';\n    if (w < 2 * r) r = w / 2;\n    if (h < 2 * r) r = h / 2;\n    ctx.beginPath();\n    ctx.moveTo(x + r, y);\n    ctx.arcTo(x + w, y, x + w, y + h, r);\n    ctx.arcTo(x + w, y + h, x, y + h, r);\n    ctx.arcTo(x, y + h, x, y, r);\n    ctx.arcTo(x, y, x + w, y, r);\n    ctx.closePath();\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/Projects/idleForestV2/frontend/src/Components/Canvas/Draw/Render/index.js"],"names":["Render","text","str","x","y","size","ctx","color","toString","length","parseInt","split","strokeStyle","font","word","strokeText","textLine","textLinesByLength","lines","y_offset","img","width","height","drawImage","pos","roundRect","w","h","r","fillStyle","beginPath","moveTo","arcTo","closePath"],"mappings":"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","sourcesContent":["export default class Render {\n\n\ttext(str, x, y, size, ctx, color= \"white\") {\n\t\tif (str.toString().length > 6 && parseInt(size) >= 10) {\n\t\t\tx -= 6\n\t\t}\n\t\tstr = str.toString().split(' ');\n\n\t\tctx.strokeStyle = color\n\t\tctx.font = size+\"px Comic Sans MS\";\n\t\t\n\t\tfor (let word in str) {\n\t\t\tctx.strokeText(str[word], x, y + (word * 7));\n\t\t}\n    }\n\n    textLine(str, x, y, size, ctx, color= \"white\") {\n\t\tif (str.toString().length > 6 && parseInt(size) >= 10) {\n\t\t\tx -= 6\n\t\t}\n\n\t\tctx.strokeStyle = color\n\t\tctx.font = size+\"px Comic Sans MS\";\n\t\t\n\t\tctx.strokeText(str, x, y);\n\t\t\n    }\n\n    textLinesByLength(str, x, y, size, lines, ctx, color= \"white\") {\n    \tstr = str.split(\"\\n\");\n    \tctx.strokeStyle = color\n\t\tctx.font = size+\"px Comic Sans MS\";\n\t\tlet y_offset = 0;\n\t\tfor (let word in str) {\n\t\t\tif(word % lines === 0) {\n\t\t\t\ty_offset += 10;\n\t\t\t}\n\t\t\tctx.strokeText(str[word], x, y + (y_offset));\n\t\t}\n    }\n\n    img(img, x,y, width, height, ctx) {\n\t    ctx.drawImage(img.img, \n\t                  img.pos.x,\n\t                  img.pos.y, \n\t                  img.pos.width, \n\t                  img.pos.height,\n\t                  x,\n\t                  y,\n\t                  width,\n\t                  height\n\t                );\n\t}\n\n\troundRect(x, y, w, h, r, ctx) {\n\t\tctx.fillStyle = 'rgba(16, 133, 26,0.9)';\n\t  if (w < 2 * r) r = w / 2;\n\t  if (h < 2 * r) r = h / 2;\n\t  ctx.beginPath();\n\t  ctx.moveTo(x+r, y);\n\t  ctx.arcTo(x+w, y,   x+w, y+h, r);\n\t  ctx.arcTo(x+w, y+h, x,   y+h, r);\n\t  ctx.arcTo(x,   y+h, x,   y,   r);\n\t  ctx.arcTo(x,   y,   x+w, y,   r);\n\t  ctx.closePath();;\n\t}\n}"]},"metadata":{},"sourceType":"module"}