{"ast":null,"code":"import Render from '../../Render';\nimport { background } from '../../../../../Images';\nimport itemImages from '../../../../../Images/itemImages';\nexport default class Armor {\n  constructor() {\n    this.render = new Render();\n    this.slots = {\n      helm: this.armorPiece(404, 200, this.render),\n      chest: this.armorPiece(404, 240, this.render),\n      legs: this.armorPiece(404, 280, this.render),\n      feet: this.armorPiece(404, 320, this.render),\n      weapon: this.armorPiece(360, 240, this.render),\n      shield: this.armorPiece(448, 240, this.render),\n      bow: this.armorPiece(360, 135, this.render),\n      arrows: this.armorPiece(448, 135, this.render),\n      pickaxe: this.armorPiece(360, 175, this.render),\n      axe: this.armorPiece(448, 175, this.render)\n    };\n  }\n\n  draw(canvas, player) {\n    this.inventoryBackground(canvas);\n    this.borders(canvas);\n    this.items(canvas, player);\n  }\n\n  armorStats(canvas, player) {\n    console.log(player.armorBonus);\n  }\n\n  armorPiece(x, y, render) {\n    return {\n      render: render,\n      x: x,\n      y: y,\n      draw: function (armor, canvas) {\n        if (itemImages[armor.category] && itemImages[armor.category][armor.img]) {\n          this.render.img(itemImages[armor.category][armor.img], this.x, this.y, 32, 32, canvas.ctx);\n        } else if (armor.category !== false && armor.img !== false) {\n          this.render.text(armor.name, this.x, this.y + 14, 8, canvas.ctx);\n        }\n      },\n      drawArrows: function (armor, canvas) {\n        if (itemImages[armor.category] && itemImages[armor.category][armor.img]) {\n          this.render.text(armor.quantity, this.x + 4, this.y + 8, 10, canvas.ctx);\n          this.render.img(itemImages[armor.category][armor.img], this.x, this.y + 8, 32, 32, canvas.ctx);\n        } else if (armor.category !== false && armor.img !== false) {\n          this.render.text(armor.name, this.x, this.y, 10, canvas.ctx);\n        }\n      }\n    };\n  }\n\n  items(canvas, player) {\n    if (!player) return false;\n    this.slots.helm.draw(player.animation.helm, canvas);\n    this.slots.chest.draw(player.animation.chest, canvas);\n    this.slots.legs.draw(player.animation.legs, canvas);\n    this.slots.feet.draw(player.animation.feet, canvas);\n    this.slots.weapon.draw(player.animation.weapon, canvas);\n    this.slots.shield.draw(player.animation.shield, canvas);\n    this.slots.bow.draw(player.animation.bow, canvas);\n    this.slots.arrows.drawArrows(player.animation.arrows, canvas);\n    this.slots.pickaxe.draw(player.animation.pickaxe, canvas);\n    this.slots.axe.draw(player.animation.axe, canvas);\n  }\n\n  borders(canvas) {\n    let armorKeys = Object.keys(this.slots);\n\n    for (let key of armorKeys) {\n      this.render.img(background.itemBorder, this.slots[key].x, this.slots[key].y, 32, 32, canvas.ctx);\n    }\n  }\n\n  inventoryBackground(canvas) {\n    this.render.img(background.stats, 360, 0, 120, 480, canvas.ctx);\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/Projects/idleForestV2/frontend/src/Components/Canvas/Draw/UI/Armor/index.js"],"names":["Render","background","itemImages","Armor","constructor","render","slots","helm","armorPiece","chest","legs","feet","weapon","shield","bow","arrows","pickaxe","axe","draw","canvas","player","inventoryBackground","borders","items","armorStats","console","log","armorBonus","x","y","armor","category","img","ctx","text","name","drawArrows","quantity","animation","armorKeys","Object","keys","key","itemBorder","stats"],"mappings":"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","sourcesContent":["import Render from '../../Render'\nimport {background} from '../../../../../Images'\nimport itemImages from '../../../../../Images/itemImages'\nexport default class Armor {\n\tconstructor() {\n\t\tthis.render = new Render()\n\t\tthis.slots = {\n\t\t\thelm : this.armorPiece(404, 200, this.render),\n\t\t\tchest : this.armorPiece(404, 240, this.render),\n\t\t\tlegs : this.armorPiece(404, 280, this.render),\n\t\t\tfeet : this.armorPiece(404, 320, this.render),\n\t\t\tweapon : this.armorPiece(360, 240, this.render),\n\t\t\tshield : this.armorPiece(448, 240, this.render),\n\t\t\tbow : this.armorPiece(360, 135, this.render),\n\t\t\tarrows : this.armorPiece(448, 135, this.render),\n\t\t\tpickaxe : this.armorPiece(360, 175, this.render),\n\t\t\taxe : this.armorPiece(448, 175, this.render),\n\t\t}\n\t}\n\n\tdraw(canvas, player) {\n\t\tthis.inventoryBackground(canvas)\n\t\tthis.borders(canvas)\n\t\tthis.items(canvas, player)\n\t}\n\n\tarmorStats(canvas, player) {\n\t\tconsole.log(player.armorBonus)\n\t}\n\n\tarmorPiece(x,y, render) {\n\t\treturn({\n\t\t\trender: render,\n\t\t\tx: x,\n\t\t\ty: y,\n\n\t\t\tdraw: function(armor, canvas) {\n\t\t\t\tif (itemImages[armor.category] && itemImages[armor.category][armor.img]) {\n\t\t\t\t\tthis.render.img(itemImages[armor.category][armor.img], this.x, this.y, 32,32, canvas.ctx);\n\t\t\t\t} else if (armor.category !== false && armor.img !== false){\n\t\t\t\t\tthis.render.text(armor.name, this.x, this.y+14, 8,canvas.ctx);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdrawArrows: function(armor, canvas) {\n\t\t\t\tif (itemImages[armor.category] && itemImages[armor.category][armor.img]) {\n\t\t\t\t\tthis.render.text(armor.quantity, this.x + 4, this.y + 8, 10,canvas.ctx);\n\t\t\t\t\tthis.render.img(itemImages[armor.category][armor.img], this.x, this.y + 8, 32,32, canvas.ctx);\n\t\t\t\t} else if (armor.category !== false && armor.img !== false){\n\t\t\t\t\tthis.render.text(armor.name, this.x, this.y, 10,canvas.ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\t\n\n\titems(canvas, player) {\n\t\tif(!player) return false\n\t\t\t\tthis.slots.helm.draw(player.animation.helm, canvas)\n\t\t\t\tthis.slots.chest.draw(player.animation.chest, canvas)\n\t\t\t\tthis.slots.legs.draw(player.animation.legs, canvas)\n\t\t\t\tthis.slots.feet.draw(player.animation.feet, canvas)\n\t\t\t\tthis.slots.weapon.draw(player.animation.weapon, canvas)\n\t\t\t\tthis.slots.shield.draw(player.animation.shield, canvas)\n\t\t\t\tthis.slots.bow.draw(player.animation.bow, canvas)\n\t\t\t\tthis.slots.arrows.drawArrows(player.animation.arrows, canvas)\n\n\t\t\t\tthis.slots.pickaxe.draw(player.animation.pickaxe, canvas)\n\t\t\t\tthis.slots.axe.draw(player.animation.axe, canvas)\n\t}\n\n\tborders (canvas) {\n\t\tlet armorKeys = Object.keys(this.slots);\n\t\tfor (let key of armorKeys) {\n\t\t\tthis.render.img(background.itemBorder, this.slots[key].x, this.slots[key].y, 32,32,canvas.ctx)\n\t\t}\n\n\t}\n\n\tinventoryBackground(canvas) {\n\t\tthis.render.img(background.stats, 360, 0, 120, 480, canvas.ctx)\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}