{"ast":null,"code":"import Render from '../../Render';\nimport { background } from '../../../../../Images';\nimport itemImages from '../../../../../Images/itemImages';\nexport default class Armor {\n  constructor() {\n    this.render = new Render();\n    this.slots = {\n      helm: this.armorPiece(404, 200, this.render),\n      chest: this.armorPiece(404, 240, this.render),\n      legs: this.armorPiece(404, 280, this.render),\n      feet: this.armorPiece(404, 320, this.render),\n      weapon: this.armorPiece(360, 240, this.render),\n      shield: this.armorPiece(448, 240, this.render),\n      bow: this.armorPiece(360, 135, this.render),\n      arrows: this.armorPiece(448, 135, this.render),\n      pickaxe: this.armorPiece(360, 175, this.render),\n      axe: this.armorPiece(448, 175, this.render)\n    };\n  }\n\n  draw(canvas, player) {\n    this.inventoryBackground(canvas);\n    this.borders(canvas);\n    this.items(canvas, player);\n    this.armorStats(canvas, player);\n  }\n\n  armorStats(canvas, player) {\n    console.log(player.armorBonus);\n    this.render.textLine(`Attack: ${player.armorBonus.attack}`, 300, 300, 10, canvas.ctx);\n    this.render.textLine(`Defense: ${player.armorBonus.defense}`, 300, 320, 10, canvas.ctx);\n    this.render.textLine(`Speed: ${player.armorBonus.speed}`, 300, 340, 10, canvas.ctx);\n    this.render.textLine(`Range: ${player.armorBonus.range}`, 300, 360, 10, canvas.ctx);\n    this.render.textLine(`Mining: ${player.armorBonus.mining}`, 300, 380, 10, canvas.ctx);\n    this.render.textLine(`WoodCut: ${player.armorBonus.woodcutting}`, 300, 400, 10, canvas.ctx);\n  }\n\n  armorPiece(x, y, render) {\n    return {\n      render: render,\n      x: x,\n      y: y,\n      draw: function (armor, canvas) {\n        if (itemImages[armor.category] && itemImages[armor.category][armor.img]) {\n          this.render.img(itemImages[armor.category][armor.img], this.x, this.y, 32, 32, canvas.ctx);\n        } else if (armor.category !== false && armor.img !== false) {\n          this.render.text(armor.name, this.x, this.y + 14, 8, canvas.ctx);\n        }\n      },\n      drawArrows: function (armor, canvas) {\n        if (itemImages[armor.category] && itemImages[armor.category][armor.img]) {\n          this.render.text(armor.quantity, this.x + 4, this.y + 8, 10, canvas.ctx);\n          this.render.img(itemImages[armor.category][armor.img], this.x, this.y + 8, 32, 32, canvas.ctx);\n        } else if (armor.category !== false && armor.img !== false) {\n          this.render.text(armor.name, this.x, this.y, 10, canvas.ctx);\n        }\n      }\n    };\n  }\n\n  items(canvas, player) {\n    if (!player) return false;\n    this.slots.helm.draw(player.animation.helm, canvas);\n    this.slots.chest.draw(player.animation.chest, canvas);\n    this.slots.legs.draw(player.animation.legs, canvas);\n    this.slots.feet.draw(player.animation.feet, canvas);\n    this.slots.weapon.draw(player.animation.weapon, canvas);\n    this.slots.shield.draw(player.animation.shield, canvas);\n    this.slots.bow.draw(player.animation.bow, canvas);\n    this.slots.arrows.drawArrows(player.animation.arrows, canvas);\n    this.slots.pickaxe.draw(player.animation.pickaxe, canvas);\n    this.slots.axe.draw(player.animation.axe, canvas);\n  }\n\n  borders(canvas) {\n    let armorKeys = Object.keys(this.slots);\n\n    for (let key of armorKeys) {\n      this.render.img(background.itemBorder, this.slots[key].x, this.slots[key].y, 32, 32, canvas.ctx);\n    }\n  }\n\n  inventoryBackground(canvas) {\n    this.render.img(background.stats, 360, 0, 120, 480, canvas.ctx);\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/Projects/idleForestV2/frontend/src/Components/Canvas/Draw/UI/Armor/index.js"],"names":["Render","background","itemImages","Armor","constructor","render","slots","helm","armorPiece","chest","legs","feet","weapon","shield","bow","arrows","pickaxe","axe","draw","canvas","player","inventoryBackground","borders","items","armorStats","console","log","armorBonus","textLine","attack","ctx","defense","speed","range","mining","woodcutting","x","y","armor","category","img","text","name","drawArrows","quantity","animation","armorKeys","Object","keys","key","itemBorder","stats"],"mappings":"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","sourcesContent":["import Render from '../../Render'\nimport {background} from '../../../../../Images'\nimport itemImages from '../../../../../Images/itemImages'\nexport default class Armor {\n\tconstructor() {\n\t\tthis.render = new Render()\n\t\tthis.slots = {\n\t\t\thelm : this.armorPiece(404, 200, this.render),\n\t\t\tchest : this.armorPiece(404, 240, this.render),\n\t\t\tlegs : this.armorPiece(404, 280, this.render),\n\t\t\tfeet : this.armorPiece(404, 320, this.render),\n\t\t\tweapon : this.armorPiece(360, 240, this.render),\n\t\t\tshield : this.armorPiece(448, 240, this.render),\n\t\t\tbow : this.armorPiece(360, 135, this.render),\n\t\t\tarrows : this.armorPiece(448, 135, this.render),\n\t\t\tpickaxe : this.armorPiece(360, 175, this.render),\n\t\t\taxe : this.armorPiece(448, 175, this.render),\n\t\t}\n\t}\n\n\tdraw(canvas, player) {\n\t\tthis.inventoryBackground(canvas)\n\t\tthis.borders(canvas)\n\t\tthis.items(canvas, player)\n\t\tthis.armorStats(canvas, player)\n\t}\n\n\tarmorStats(canvas, player) {\n\t\tconsole.log(player.armorBonus)\n\t\tthis.render.textLine(`Attack: ${player.armorBonus.attack}`, 300, 300, 10, canvas.ctx)\n\t\tthis.render.textLine(`Defense: ${player.armorBonus.defense}`, 300, 320, 10, canvas.ctx)\n\t\tthis.render.textLine(`Speed: ${player.armorBonus.speed}`, 300, 340, 10, canvas.ctx)\n\t\tthis.render.textLine(`Range: ${player.armorBonus.range}`, 300, 360, 10, canvas.ctx)\n\t\tthis.render.textLine(`Mining: ${player.armorBonus.mining}`, 300, 380, 10, canvas.ctx)\n\t\tthis.render.textLine(`WoodCut: ${player.armorBonus.woodcutting}`, 300, 400, 10, canvas.ctx)\n\t}\n\n\tarmorPiece(x,y, render) {\n\t\treturn({\n\t\t\trender: render,\n\t\t\tx: x,\n\t\t\ty: y,\n\n\t\t\tdraw: function(armor, canvas) {\n\t\t\t\tif (itemImages[armor.category] && itemImages[armor.category][armor.img]) {\n\t\t\t\t\tthis.render.img(itemImages[armor.category][armor.img], this.x, this.y, 32,32, canvas.ctx);\n\t\t\t\t} else if (armor.category !== false && armor.img !== false){\n\t\t\t\t\tthis.render.text(armor.name, this.x, this.y+14, 8,canvas.ctx);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdrawArrows: function(armor, canvas) {\n\t\t\t\tif (itemImages[armor.category] && itemImages[armor.category][armor.img]) {\n\t\t\t\t\tthis.render.text(armor.quantity, this.x + 4, this.y + 8, 10,canvas.ctx);\n\t\t\t\t\tthis.render.img(itemImages[armor.category][armor.img], this.x, this.y + 8, 32,32, canvas.ctx);\n\t\t\t\t} else if (armor.category !== false && armor.img !== false){\n\t\t\t\t\tthis.render.text(armor.name, this.x, this.y, 10,canvas.ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\t\n\n\titems(canvas, player) {\n\t\tif(!player) return false\n\t\t\t\tthis.slots.helm.draw(player.animation.helm, canvas)\n\t\t\t\tthis.slots.chest.draw(player.animation.chest, canvas)\n\t\t\t\tthis.slots.legs.draw(player.animation.legs, canvas)\n\t\t\t\tthis.slots.feet.draw(player.animation.feet, canvas)\n\t\t\t\tthis.slots.weapon.draw(player.animation.weapon, canvas)\n\t\t\t\tthis.slots.shield.draw(player.animation.shield, canvas)\n\t\t\t\tthis.slots.bow.draw(player.animation.bow, canvas)\n\t\t\t\tthis.slots.arrows.drawArrows(player.animation.arrows, canvas)\n\n\t\t\t\tthis.slots.pickaxe.draw(player.animation.pickaxe, canvas)\n\t\t\t\tthis.slots.axe.draw(player.animation.axe, canvas)\n\t}\n\n\tborders (canvas) {\n\t\tlet armorKeys = Object.keys(this.slots);\n\t\tfor (let key of armorKeys) {\n\t\t\tthis.render.img(background.itemBorder, this.slots[key].x, this.slots[key].y, 32,32,canvas.ctx)\n\t\t}\n\n\t}\n\n\tinventoryBackground(canvas) {\n\t\tthis.render.img(background.stats, 360, 0, 120, 480, canvas.ctx)\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}