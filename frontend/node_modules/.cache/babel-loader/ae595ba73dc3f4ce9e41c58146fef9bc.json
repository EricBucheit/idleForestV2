{"ast":null,"code":"import { icons } from '../../../../Images';\nimport Render from '../Render';\nexport default class BottomInventoryIcons {\n  constructor() {\n    this.Render = new Render();\n  }\n\n  bottomButtons() {\n    let pos = {\n      x: 330,\n      y: 445\n    };\n    return {\n      stats: this.makeButton(\"skills\", \"stats\", pos.x += 30, 445),\n      inventory: this.makeButton(\"inventory\", \"inventory\", pos.x += 30, 445),\n      armor: this.makeButton(\"armor\", \"armor\", pos.x += 30, 445),\n      magic: this.makeButton(\"magic\", \"magic\", pos.x += 30, 445)\n    };\n  }\n\n  makeButton(name, img, x, y) {\n    return {\n      name: name,\n      img: img,\n      body: new RigidBody({\n        x: x,\n        y: y,\n        width: 32,\n        height: 32\n      })\n    };\n  }\n\n  buttons(canvas, buttons) {\n    if (buttons) {\n      buttons = buttons.inventoryButtons;\n      this.Render.img(icons[buttons.stats.img], buttons.stats.body.pos.x, buttons.stats.body.pos.y, 32, 32, canvas.ctx);\n      this.Render.img(icons[buttons.inventory.img], buttons.inventory.body.pos.x, buttons.inventory.body.pos.y, 32, 32, canvas.ctx);\n      this.Render.img(icons[buttons.armor.img], buttons.armor.body.pos.x, buttons.armor.body.pos.y, 32, 32, canvas.ctx);\n      this.Render.img(icons[buttons.magic.img], buttons.magic.body.pos.x, buttons.magic.body.pos.y, 32, 32, canvas.ctx);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/idleForestV2/frontend/src/Components/Canvas/Draw/Buttons/BottomInventoryIcons.js"],"names":["icons","Render","BottomInventoryIcons","constructor","bottomButtons","pos","x","y","stats","makeButton","inventory","armor","magic","name","img","body","RigidBody","width","height","buttons","canvas","inventoryButtons","ctx"],"mappings":"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","sourcesContent":["import {icons} from '../../../../Images'\nimport Render from '../Render'\n\nexport default class BottomInventoryIcons {\n\tconstructor() {\n\t\tthis.Render = new Render()\n\t}\n\n\tbottomButtons() {\n\t\tlet pos = {\n\t\t\tx: 330,\n\t\t\ty: 445,\n\t\t}\n\n\t\treturn ({\n\t\t\tstats: this.makeButton(\"skills\" ,\"stats\", pos.x += 30, 445),\n\t\t\tinventory: this.makeButton(\"inventory\", \"inventory\", pos.x += 30, 445),\n\t\t\tarmor: this.makeButton(\"armor\" , \"armor\", pos.x += 30, 445),\n\t\t\tmagic: this.makeButton(\"magic\" , \"magic\", pos.x += 30, 445),\n\t\t})\n\t}\n\n\n\tmakeButton(name, img, x, y) {\n\t\treturn ({\n\t\t\tname: name,\n\t\t\timg: img,\n\t\t\tbody: new RigidBody({x: x, y: y, width: 32, height: 32})\n\t\t})\n\t}\n\n\n\tbuttons(canvas, buttons) {\n\t\tif (buttons) {\n\t\t\tbuttons = buttons.inventoryButtons;\n\t\t\tthis.Render.img(icons[buttons.stats.img], buttons.stats.body.pos.x, buttons.stats.body.pos.y, 32,32, canvas.ctx)\n\t\t\tthis.Render.img(icons[buttons.inventory.img], buttons.inventory.body.pos.x, buttons.inventory.body.pos.y, 32,32, canvas.ctx)\n\t\t\tthis.Render.img(icons[buttons.armor.img], buttons.armor.body.pos.x, buttons.armor.body.pos.y, 32,32, canvas.ctx)\n\t\t\tthis.Render.img(icons[buttons.magic.img], buttons.magic.body.pos.x, buttons.magic.body.pos.y, 32,32, canvas.ctx)\n\n\t\t}\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}