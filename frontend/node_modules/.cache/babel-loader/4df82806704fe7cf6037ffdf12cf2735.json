{"ast":null,"code":"import Pizzicato from \"pizzicato\";\nimport swing from './player/swing/swing.wav';\nimport hit from './player/swing/hit.wav';\nimport hit1 from './player/swing/hit1.wav';\nimport oreHit from './player/swing/sword-unsheathe.wav';\nimport magic from './player/magic/spell.wav';\nimport homeScreenMusic from './music/homeMusic.mp3';\nlet playerSounds = {\n  swing: new Pizzicato.Sound({\n    source: 'file',\n    options: {\n      path: swing,\n      volume: 0.4\n    }\n  }, function () {}),\n  hit: new Pizzicato.Sound({\n    source: 'file',\n    options: {\n      path: hit\n    }\n  }, function () {}),\n  hit1: new Pizzicato.Sound({\n    source: 'file',\n    options: {\n      path: hit1\n    }\n  }, function () {}),\n  oreHit: new Pizzicato.Sound({\n    source: 'file',\n    options: {\n      path: oreHit,\n      volume: 0.1\n    }\n  }, function () {}),\n  magic: new Pizzicato.Sound({\n    source: 'file',\n    options: {\n      path: magic,\n      volume: 0.3\n    }\n  }, function () {})\n};\nlet music = {\n  homeScreen: new Pizzicato.Sound({\n    source: 'file',\n    options: {\n      path: homeScreenMusic,\n      volume: 0.1\n    }\n  }, function () {}),\n  mainScreen: new Pizzicato.Sound({\n    source: 'file',\n    options: {\n      path: homeScreenMusic,\n      volume: 0.1\n    }\n  }, function () {})\n};\n\nfunction soundCheck(sound, play) {\n  if (play) {\n    try {\n      sound.play();\n    } catch (err) {\n      console.log(\"PlayBack Error\");\n    }\n  }\n}\n\nfunction playSong(sound, play) {\n  stopAll();\n  soundCheck(sound, play);\n}\n\nfunction stopAll() {\n  music.homeScreen.stop();\n  music.mainScreen.stop();\n}\n\nexport { soundCheck, playSong, stopAll, playerSounds, music };","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/idleForestV2/frontend/src/Sounds/index.js"],"names":["Pizzicato","swing","hit","hit1","oreHit","magic","homeScreenMusic","playerSounds","Sound","source","options","path","volume","music","homeScreen","mainScreen","soundCheck","sound","play","err","console","log","playSong","stopAll","stop"],"mappings":"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","sourcesContent":["\nimport Pizzicato from \"pizzicato\"\nimport swing from './player/swing/swing.wav'\nimport hit from './player/swing/hit.wav'\nimport hit1 from './player/swing/hit1.wav'\nimport oreHit from './player/swing/sword-unsheathe.wav'\nimport magic from './player/magic/spell.wav'\nimport homeScreenMusic from './music/homeMusic.mp3'\n\n\n\nlet playerSounds = {\n    swing : new Pizzicato.Sound({ \n        source: 'file',\n        options: { path: swing, volume: 0.4 }\n    }, function() {\n    }),\n\n    hit : new Pizzicato.Sound({ \n        source: 'file',\n        options: { path: hit }\n    }, function() {\n    }),\n\n    hit1 : new Pizzicato.Sound({ \n        source: 'file',\n        options: { path: hit1 }\n    }, function() {\n    }),\n\n    oreHit : new Pizzicato.Sound({ \n        source: 'file',\n        options: { path: oreHit, volume: 0.1}\n    }, function() {\n    }),\n\n    magic : new Pizzicato.Sound({ \n        source: 'file',\n        options: { path: magic, volume: 0.3}\n    }, function() {\n    }),\n}\n\n\n\nlet music = { \n    homeScreen : new Pizzicato.Sound({ \n        source: 'file',\n        options: { path: homeScreenMusic, volume: 0.1 }\n        }, function() {\n\n        }),\n\n    mainScreen : new Pizzicato.Sound({ \n        source: 'file',\n        options: { path: homeScreenMusic, volume: 0.1 }\n        }, function() {\n\n        }),\n}\n\nfunction soundCheck(sound, play) {\n    if(play) {\n        try {\n            sound.play();\n        } catch(err) {\n            console.log(\"PlayBack Error\");\n        }\n    }\n}\n\nfunction playSong(sound, play) {\n    stopAll()\n    soundCheck(sound, play);\n}\n\nfunction stopAll() {\n    music.homeScreen.stop();\n    music.mainScreen.stop()\n}\n\nexport {\n    soundCheck,\n    playSong,\n    stopAll,\n    playerSounds,\n    music,\n}"]},"metadata":{},"sourceType":"module"}