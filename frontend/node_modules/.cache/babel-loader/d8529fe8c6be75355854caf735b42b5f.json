{"ast":null,"code":"function mapTile(x, y, width, height) {\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height\n  };\n}\n\nvar imgsLoaded = 0;\n\nfunction singleImage(img) {\n  let image = new Image();\n  image.src = img;\n\n  image.onload = function () {\n    imgsLoaded++;\n  };\n\n  return image;\n}\n\nfunction partSheetImage(srcs, x = 64, y = 64) {\n  function getPositions(img, x, y) {\n    return {\n      up: {\n        img: singleImage(img),\n        pos: 0\n      },\n      left: {\n        img: singleImage(img),\n        pos: y\n      },\n      down: {\n        img: singleImage(img),\n        pos: y * 2\n      },\n      right: {\n        img: singleImage(img),\n        pos: y * 3\n      },\n      getImg: function (direction, index) {\n        return {\n          img: this[direction].img,\n          pos: mapTile(index * x, this[direction].pos, x, y)\n        };\n      }\n    };\n  }\n\n  let imgObject = {\n    hurt: getPositions(srcs.hurt, x, y),\n    idle: getPositions(srcs.idle, x, y),\n    magic: getPositions(srcs.magic, x, y),\n    shoot: getPositions(srcs.shoot, x, y),\n    swing: getPositions(srcs.swing, x, y),\n    thrust: getPositions(srcs.thrust, x, y),\n    walk: getPositions(srcs.walk, x, y) // arrows : getPositions(0, 1, 2, 3, 8)\n\n  };\n  return imgObject;\n}\n\nfunction partSheetCustom(srcs, size) {\n  function getPositions(img) {\n    return {\n      up: {\n        img: singleImage(img),\n        pos: 0\n      },\n      left: {\n        img: singleImage(img),\n        pos: 64\n      },\n      down: {\n        img: singleImage(img),\n        pos: 64 * 2\n      },\n      right: {\n        img: singleImage(img),\n        pos: 64 * 3\n      },\n      getImg: function (direction, index) {\n        return {\n          img: this[direction].img,\n          pos: mapTile(index * 64, this[direction].pos, 64, 64)\n        };\n      }\n    };\n  }\n\n  function customPositions(img) {\n    return {\n      up: {\n        img: singleImage(img.img),\n        pos: img.up\n      },\n      left: {\n        img: singleImage(img.img),\n        pos: img.left\n      },\n      down: {\n        img: singleImage(img.img),\n        pos: img.down\n      },\n      right: {\n        img: singleImage(img.img),\n        pos: img.right\n      },\n      getImg: function (direction, index) {\n        return {\n          img: this[direction].img,\n          pos: mapTile(index * 64, this[direction].pos, 64, img.height)\n        };\n      }\n    };\n  }\n\n  let imgObject = {\n    hurt: getPositions(srcs.hurt.img),\n    idle: getPositions(srcs.idle.img),\n    magic: customPositions(srcs.magic),\n    shoot: customPositions(srcs.shoot),\n    swing: customPositions(srcs.swing),\n    thrust: customPositions(srcs.thrust),\n    walk: getPositions(srcs.walk.img)\n  };\n  return imgObject;\n}\n\nfunction fullSheetImage(src) {\n  function getPositions(up, left, down, right, end, src) {\n    return {\n      end: end,\n      up: {\n        img: singleImage(src),\n        pos: up * 64\n      },\n      left: {\n        img: singleImage(src),\n        pos: left * 64\n      },\n      down: {\n        img: singleImage(src),\n        pos: down * 64\n      },\n      right: {\n        img: singleImage(src),\n        pos: right * 64\n      },\n      getImg: function (direction, index) {\n        return {\n          img: this[direction].img,\n          pos: mapTile(index * 64, this[direction].pos, 64, 64)\n        };\n      }\n    };\n  }\n\n  let imgObject = {\n    hurt: getPositions(20, 20, 20, 20, 5, src),\n    idle: getPositions(8, 9, 10, 11, 0, src),\n    magic: getPositions(0, 1, 2, 3, 6, src),\n    shoot: getPositions(16, 17, 18, 19, 12, src),\n    swing: getPositions(12, 13, 14, 15, 5, src),\n    thrust: getPositions(4, 5, 6, 7, 7, src),\n    walk: getPositions(8, 9, 10, 11, 7, src)\n  };\n  return imgObject;\n}\n\nfunction animalImage(srcs, size) {\n  function getPositions(end, size, img) {\n    return {\n      size: size,\n      up: {\n        img: singleImage(img),\n        pos: 0,\n        end: end\n      },\n      left: {\n        img: singleImage(img),\n        pos: size,\n        end: end\n      },\n      down: {\n        img: singleImage(img),\n        pos: size * 2,\n        end: end\n      },\n      right: {\n        img: singleImage(img),\n        pos: size * 3,\n        end: end\n      },\n      getImg: function (direction, index) {\n        return {\n          img: this[direction].img,\n          pos: mapTile(index * this.size, this[direction].pos, this.size, this.size)\n        };\n      }\n    };\n  }\n\n  let imgObject = {\n    eat: getPositions(3, size, srcs.eat),\n    walk: getPositions(3, size, srcs.walk),\n    idle: getPositions(3, size, srcs.walk)\n  };\n  return imgObject;\n}\n\nfunction farmPlantImage(src, pos) {\n  return {\n    img: singleImage(src),\n    width: 32,\n    height: 64,\n    end: 4,\n    pos: {\n      x: pos.x,\n      y: pos.y\n    },\n    getImg: function (index) {\n      return {\n        img: this.img,\n        pos: mapTile(this.pos.x, index * this.height, this.width, this.height)\n      };\n    }\n  };\n}\n\nfunction magicAnimation(src) {\n  return {\n    img: singleImage(src),\n    width: 128,\n    height: 128,\n    getImg: function (index) {\n      return {\n        img: this.img,\n        pos: mapTile(index % 4 * this.width, Math.floor(index / 4) * this.height, this.width, this.height)\n      };\n    }\n  };\n}\n\nmodule.exports = {\n  mapTile,\n  singleImage,\n  partSheetImage,\n  partSheetCustom,\n  fullSheetImage,\n  animalImage,\n  farmPlantImage,\n  magicAnimation\n};","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/idleForestV2/frontend/src/Images/imgFunctions.js"],"names":["mapTile","x","y","width","height","imgsLoaded","singleImage","img","image","Image","src","onload","partSheetImage","srcs","getPositions","up","pos","left","down","right","getImg","direction","index","imgObject","hurt","idle","magic","shoot","swing","thrust","walk","partSheetCustom","size","customPositions","fullSheetImage","end","animalImage","eat","farmPlantImage","magicAnimation","Math","floor","module","exports"],"mappings":"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","sourcesContent":["function mapTile(x,y,width,height) {\n\treturn ({\n\t\tx:x,\n\t\ty:y,\n\t\twidth : width,\n\t\theight: height,\n\t})\n}\n\nvar imgsLoaded = 0;\n\nfunction singleImage(img) {\n\tlet image = new Image();\n\timage.src = img;\n\timage.onload = function() {\n\t\timgsLoaded++;\n\t}\n\treturn image;\n}\n\n\nfunction partSheetImage(srcs, x = 64, y = 64) {\n\tfunction getPositions(img, x, y) {\n\t\treturn ({\n\t\t\tup : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: 0,\n\t\t\t},\n\t\t\tleft : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: y,\n\t\t\t},\n\t\t\tdown : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: y * 2,\n\t\t\t},\n\t\t\tright : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: y * 3,\n\t\t\t},\n\t\t\tgetImg : function(direction, index) {\n\t\t\t\treturn ({\n\t\t\t\t\timg: this[direction].img,\n\t\t\t\t\tpos: mapTile(index * x, this[direction].pos, x, y)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tlet imgObject = {\n\t\thurt :  getPositions(srcs.hurt, x, y),\n\t\tidle : getPositions(srcs.idle, x, y),\n\t\tmagic : getPositions(srcs.magic, x, y),\n\t\tshoot : getPositions(srcs.shoot, x, y),\n\t\tswing : getPositions(srcs.swing, x, y),\n\t\tthrust : getPositions(srcs.thrust, x, y),\n\t\twalk : getPositions(srcs.walk, x, y),\n\t\t// arrows : getPositions(0, 1, 2, 3, 8)\n\t}\n\n\treturn (imgObject)\n}\n\n\nfunction partSheetCustom(srcs, size) {\n\tfunction getPositions(img) {\n\t\treturn ({\n\t\t\tup : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: 0,\n\t\t\t},\n\t\t\tleft : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: 64,\n\t\t\t},\n\t\t\tdown : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: 64 * 2,\n\t\t\t},\n\t\t\tright : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: 64 * 3,\n\t\t\t},\n\t\t\tgetImg : function(direction, index) {\n\t\t\t\treturn ({\n\t\t\t\t\timg: this[direction].img,\n\t\t\t\t\tpos: mapTile(index * 64, this[direction].pos, 64,64)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tfunction customPositions(img) {\n\t\treturn ({\n\t\t\tup : {\n\t\t\t\timg: singleImage(img.img),\n\t\t\t\tpos: img.up,\n\t\t\t},\n\t\t\tleft : {\n\t\t\t\timg: singleImage(img.img),\n\t\t\t\tpos: img.left,\n\t\t\t},\n\t\t\tdown : {\n\t\t\t\timg: singleImage(img.img),\n\t\t\t\tpos: img.down,\n\t\t\t},\n\t\t\tright : {\n\t\t\t\timg: singleImage(img.img),\n\t\t\t\tpos: img.right,\n\t\t\t},\n\t\t\tgetImg : function(direction, index) {\n\t\t\t\treturn ({\n\t\t\t\t\timg: this[direction].img,\n\t\t\t\t\tpos: mapTile(index * 64, this[direction].pos, 64, img.height)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tlet imgObject = {\n\t\thurt :  getPositions(srcs.hurt.img),\n\t\tidle : getPositions(srcs.idle.img),\n\t\tmagic : customPositions(srcs.magic),\n\t\tshoot : customPositions(srcs.shoot),\n\t\tswing : customPositions(srcs.swing),\n\t\tthrust : customPositions(srcs.thrust),\n\t\twalk : getPositions(srcs.walk.img),\n\t}\n\n\treturn (imgObject)\n}\n\n\n\nfunction fullSheetImage(src) {\n\tfunction getPositions(up, left,down,right, end, src) {\n\t\treturn ({\n\t\t\tend : end,\n\t\t\tup : {\n\t\t\t\timg : singleImage(src),\n\t\t\t\tpos : up * 64\n\t\t\t},\n\t\t\tleft : {\n\t\t\t\timg : singleImage(src),\n\t\t\t\tpos : left * 64\n\t\t\t},\n\t\t\tdown : {\n\t\t\t\timg : singleImage(src),\n\t\t\t\tpos : down * 64\n\t\t\t},\n\t\t\tright: {\n\t\t\t\timg : singleImage(src),\n\t\t\t\tpos : right * 64\n\t\t\t},\n\t\t\tgetImg : function(direction, index) {\n\t\t\t\treturn ({\n\t\t\t\t\timg: this[direction].img,\n\t\t\t\t\tpos: mapTile(index * 64, this[direction].pos, 64,64)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tlet imgObject = {\n\t\thurt: getPositions(20,20, 20, 20, 5, src),\n\t\tidle: getPositions(8, 9, 10, 11, 0, src),\n\t\tmagic: getPositions(0, 1, 2, 3, 6, src),\n\t\tshoot: getPositions(16, 17, 18, 19, 12, src),\n\t\tswing: getPositions(12, 13, 14, 15, 5, src),\n\t\tthrust: getPositions(4, 5, 6, 7, 7, src),\n\t\twalk : getPositions(8, 9, 10, 11, 7, src),\n\t}\n\n\treturn (imgObject)\n}\n\nfunction animalImage(srcs, size) {\n\tfunction getPositions(end, size, img) {\n\t\treturn ({\n\t\t\tsize : size,\n\t\t\tup : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: 0,\n\t\t\t\tend : end,\n\t\t\t},\n\t\t\tleft : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: size,\n\t\t\t\tend : end,\n\t\t\t},\n\t\t\tdown : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: size * 2,\n\t\t\t\tend : end,\n\t\t\t},\n\t\t\tright : {\n\t\t\t\timg: singleImage(img),\n\t\t\t\tpos: size * 3,\n\t\t\t\tend : end,\n\t\t\t},\n\t\t\tgetImg : function(direction, index) {\n\t\t\t\treturn ({\n\t\t\t\t\timg: this[direction].img,\n\t\t\t\t\tpos: mapTile(index * this.size, this[direction].pos, this.size,this.size)\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\tlet imgObject = {\n\t\teat: getPositions(3, size, srcs.eat),\n\t\twalk: getPositions(3, size, srcs.walk),\n\t\tidle : getPositions(3, size, srcs.walk)\n\t}\n\n\treturn (imgObject)\n}\n\nfunction farmPlantImage(src, pos) {\n\treturn ({\n\t\t\timg : singleImage(src),\n\t\t\twidth : 32,\n\t\t\theight: 64,\n\t\t\tend : 4,\n\t\t\tpos : {\n\t\t\t\tx: pos.x,\n\t\t\t\ty: pos.y,\n\t\t\t},\n\t\t\tgetImg : function(index) {\n\t\t\t\treturn ({\n\t\t\t\t\timg: this.img,\n\t\t\t\t\tpos : mapTile(this.pos.x, index * this.height, this.width, this.height),\n\t\t\t\t})\n\t\t\t},\n\t\t})\n}\n\nfunction magicAnimation(src) {\n\treturn ({\n\t\timg : singleImage(src),\n\t\twidth: 128,\n\t\theight: 128,\n\n\t\tgetImg : function(index) {\n\t\t\treturn ({\n\t\t\t\timg: this.img,\n\t\t\t\tpos : mapTile((index % 4) * this.width, (Math.floor(index / 4)) * this.height, this.width, this.height),\n\t\t\t})\n\t\t}\n\t})\n}\n\nmodule.exports = {\n\tmapTile,\n\tsingleImage,\n\tpartSheetImage,\n\tpartSheetCustom,\n\tfullSheetImage,\n\tanimalImage,\n\tfarmPlantImage,\n\tmagicAnimation,\n}"]},"metadata":{},"sourceType":"module"}