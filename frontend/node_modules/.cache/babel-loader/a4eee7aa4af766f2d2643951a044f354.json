{"ast":null,"code":"export default class Render {\n  text(str, x, y, size, ctx, color = \"white\") {\n    if (str.toString().length > 6 && parseInt(size) >= 10) {\n      x -= 6;\n    }\n\n    str = str.toString().split(' ');\n    ctx.strokeStyle = color;\n    ctx.font = size + \"px Comic Sans MS\";\n\n    for (let word in str) {\n      ctx.strokeText(str[word], x, y + word * 7);\n    }\n  }\n\n  textLine(str, x, y, size, ctx, color = \"white\") {\n    if (str.toString().length > 6 && parseInt(size) >= 10) {\n      x -= 6;\n    }\n\n    ctx.strokeStyle = color;\n    ctx.font = size + \"px Comic Sans MS\";\n    ctx.strokeText(str, x, y);\n  }\n\n  textLinesByLength(str, x, y, size, ctx, color = \"white\") {\n    str = str.split(\"\\n\");\n    ctx.strokeStyle = color;\n    ctx.font = size + \"px Comic Sans MS\";\n    let y_offset = 0;\n\n    for (let word in str) {\n      y_offset += 10;\n      ctx.strokeText(str[word], x, y + y_offset);\n    }\n  }\n\n  drawBubble(ctx, x, y, w, h, radius) {\n    // var r = x + w;\n    // var b = y + h;\n    // ctx.beginPath();\n    // ctx.fillStyle=\"black\";\n    // ctx.lineWidth=\"2\";\n    // ctx.moveTo(x+radius, y);\n    // ctx.lineTo(x+radius/2, y-10);\n    // ctx.lineTo(x+radius * 2, y);\n    // ctx.lineTo(r-radius, y);\n    // ctx.quadraticCurveTo(r, y, r, y+radius);\n    // ctx.lineTo(r, y+h-radius);\n    // ctx.quadraticCurveTo(r, b, r-radius, b);\n    // ctx.lineTo(x+radius, b);\n    // ctx.quadraticCurveTo(x, b, x, b-radius);\n    // ctx.lineTo(x, y+radius);\n    // ctx.quadraticCurveTo(x, y, x+radius, y);\n    // ctx.fill();\n    context.lineJoin = \"round\";\n    context.lineWidth = cornerRadius;\n    context.fillStyle = '#8ED6FF'; // Change origin and dimensions to match true size (a stroke makes the shape a bit larger)\n    //context.strokeRect(rectX+(cornerRadius/2), rectY+(cornerRadius/2), rectWidth-cornerRadius, rectHeight-cornerRadius);\n\n    context.fillRect(rectX + cornerRadius / 2, rectY + cornerRadius / 2, rectWidth - cornerRadius, rectHeight - cornerRadius); // You can do the same thing with paths, like this triangle\n    // Remember that a stroke will make the shape a bit larger so you'll need to fiddle with the\n    // coordinates to get the correct dimensions.\n\n    context.beginPath();\n    context.moveTo(70, 69); //Startpoint (x, y)\n\n    context.lineTo(80, 85); //Point 1    (x, y)\n\n    context.lineTo(90, 69); //Point 2    (x, y)\n\n    context.closePath();\n    context.fillStyle = '#8ED6FF';\n    context.strokeStyle = '#8ED6FF';\n    context.lineJoin = \"bevel\";\n    context.lineWidth = 1;\n    context.stroke();\n    context.fill();\n  }\n\n  img(img, x, y, width, height, ctx) {\n    ctx.drawImage(img.img, img.pos.x, img.pos.y, img.pos.width, img.pos.height, x, y, width, height);\n  }\n\n  roundRect(x, y, w, h, r, ctx) {\n    ctx.fillStyle = 'rgba(16, 133, 26,0.9)';\n    if (w < 2 * r) r = w / 2;\n    if (h < 2 * r) r = h / 2;\n    ctx.beginPath();\n    ctx.moveTo(x + r, y);\n    ctx.arcTo(x + w, y, x + w, y + h, r);\n    ctx.arcTo(x + w, y + h, x, y + h, r);\n    ctx.arcTo(x, y + h, x, y, r);\n    ctx.arcTo(x, y, x + w, y, r);\n    ctx.closePath();\n    ;\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/Projects/idleForestV2/frontend/src/Components/Canvas/Draw/Render/index.js"],"names":["Render","text","str","x","y","size","ctx","color","toString","length","parseInt","split","strokeStyle","font","word","strokeText","textLine","textLinesByLength","y_offset","drawBubble","w","h","radius","context","lineJoin","lineWidth","cornerRadius","fillStyle","fillRect","rectX","rectY","rectWidth","rectHeight","beginPath","moveTo","lineTo","closePath","stroke","fill","img","width","height","drawImage","pos","roundRect","r","arcTo"],"mappings":"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","sourcesContent":["export default class Render {\n\n\ttext(str, x, y, size, ctx, color= \"white\") {\n\t\tif (str.toString().length > 6 && parseInt(size) >= 10) {\n\t\t\tx -= 6\n\t\t}\n\t\tstr = str.toString().split(' ');\n\n\t\tctx.strokeStyle = color\n\t\tctx.font = size+\"px Comic Sans MS\";\n\t\t\n\t\tfor (let word in str) {\n\t\t\tctx.strokeText(str[word], x, y + (word * 7));\n\t\t}\n    }\n\n    textLine(str, x, y, size, ctx, color= \"white\") {\n\t\tif (str.toString().length > 6 && parseInt(size) >= 10) {\n\t\t\tx -= 6\n\t\t}\n\t\tctx.strokeStyle = color\n\t\tctx.font = size+\"px Comic Sans MS\";\n\t\tctx.strokeText(str, x, y);\n\t\t\n    }\n\n    textLinesByLength(str, x, y, size, ctx, color= \"white\") {\n    \tstr = str.split(\"\\n\");\n    \tctx.strokeStyle = color\n\t\tctx.font = size+\"px Comic Sans MS\";\n\t\tlet y_offset = 0;\n\t\tfor (let word in str) {\n\t\t\ty_offset += 10;\t\t\n\t\t\tctx.strokeText(str[word], x, y + (y_offset));\n\t\t}\n    }\n    drawBubble(ctx, x, y, w, h, radius)\n\t{\n\t  // var r = x + w;\n\t  // var b = y + h;\n\t  // ctx.beginPath();\n\n\t  // ctx.fillStyle=\"black\";\n\t  // ctx.lineWidth=\"2\";\n\n\t  // ctx.moveTo(x+radius, y);\n\t  // ctx.lineTo(x+radius/2, y-10);\n\t  // ctx.lineTo(x+radius * 2, y);\n\t  // ctx.lineTo(r-radius, y);\n\t  // ctx.quadraticCurveTo(r, y, r, y+radius);\n\t  // ctx.lineTo(r, y+h-radius);\n\t  // ctx.quadraticCurveTo(r, b, r-radius, b);\n\t  // ctx.lineTo(x+radius, b);\n\t  // ctx.quadraticCurveTo(x, b, x, b-radius);\n\t  // ctx.lineTo(x, y+radius);\n\t  // ctx.quadraticCurveTo(x, y, x+radius, y);\n\n\t  // ctx.fill();\n\n\t\tcontext.lineJoin = \"round\";\n\t\tcontext.lineWidth = cornerRadius;\n\t\tcontext.fillStyle = '#8ED6FF';\n\t\t// Change origin and dimensions to match true size (a stroke makes the shape a bit larger)\n\t\t//context.strokeRect(rectX+(cornerRadius/2), rectY+(cornerRadius/2), rectWidth-cornerRadius, rectHeight-cornerRadius);\n\t\tcontext.fillRect(rectX+(cornerRadius/2), rectY+(cornerRadius/2), rectWidth-cornerRadius, rectHeight-cornerRadius);\n\n\t\t// You can do the same thing with paths, like this triangle\n\t\t// Remember that a stroke will make the shape a bit larger so you'll need to fiddle with the\n\t\t// coordinates to get the correct dimensions.\n\t\tcontext.beginPath();\n\t\tcontext.moveTo(70,69);  //Startpoint (x, y)\n\t\tcontext.lineTo(80, 85); //Point 1    (x, y)\n\t\tcontext.lineTo(90, 69);  //Point 2    (x, y)\n\t\tcontext.closePath();\n\t\tcontext.fillStyle = '#8ED6FF';\n\t\tcontext.strokeStyle = '#8ED6FF';\n\t\tcontext.lineJoin = \"bevel\";\n\t\tcontext.lineWidth = 1;\n\t\tcontext.stroke();\n\t\tcontext.fill();\n\n\n\t}\n\n    img(img, x,y, width, height, ctx) {\n\t    ctx.drawImage(img.img, \n\t                  img.pos.x,\n\t                  img.pos.y, \n\t                  img.pos.width, \n\t                  img.pos.height,\n\t                  x,\n\t                  y,\n\t                  width,\n\t                  height\n\t                );\n\t}\n\n\troundRect(x, y, w, h, r, ctx) {\n\t\tctx.fillStyle = 'rgba(16, 133, 26,0.9)';\n\t  if (w < 2 * r) r = w / 2;\n\t  if (h < 2 * r) r = h / 2;\n\t  ctx.beginPath();\n\t  ctx.moveTo(x+r, y);\n\t  ctx.arcTo(x+w, y,   x+w, y+h, r);\n\t  ctx.arcTo(x+w, y+h, x,   y+h, r);\n\t  ctx.arcTo(x,   y+h, x,   y,   r);\n\t  ctx.arcTo(x,   y,   x+w, y,   r);\n\t  ctx.closePath();;\n\t}\n}"]},"metadata":{},"sourceType":"module"}