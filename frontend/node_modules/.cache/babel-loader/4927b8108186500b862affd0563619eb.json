{"ast":null,"code":"import { homeImages, buttons } from '../../../../../Images';\nimport Render from '../../Render';\nimport Bank from \"./Bank\";\nimport Menu from './Menu';\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction Timer(time) {\n  let date = new Date();\n  let expiration = date.getTime() + time;\n  return {\n    date: date,\n    time: time,\n    expiration: expiration,\n    reset: function () {\n      let date = new Date();\n      let newTime = date.getTime();\n      this.expiration = newTime + this.time;\n    },\n\n    isDone() {\n      let date = new Date();\n      let newTime = date.getTime();\n\n      if (newTime > this.expiration) {\n        return true;\n      }\n\n      return false;\n    },\n\n    check: function () {\n      if (this.isDone()) {\n        this.reset();\n        return true;\n      }\n\n      return false;\n    },\n\n    getTimeLeft() {\n      let date = new Date();\n      let newTime = date.getTime();\n      return expiration - newTime;\n    },\n\n    setExpiration: function (newExpiration) {\n      this.time = newExpiration;\n      this.reset();\n    }\n  };\n}\n\nexport default class Home {\n  constructor() {\n    this.render = new Render();\n    this.floor = false;\n    this.bank = new Bank();\n    this.menu = new Menu();\n    this.pos = {\n      chest: {\n        x: 32,\n        y: 32 * 4\n      },\n      anvil: {\n        x: 32,\n        y: 32 * 8\n      },\n      stove: {\n        x: 32,\n        y: 32 * 10\n      },\n      bed: {\n        x: 32 * 8,\n        y: 32 * 10\n      },\n      table: {\n        x: 32 * 8,\n        y: 32 * 5\n      },\n      waterWell: {\n        x: 240,\n        y: 80,\n        index: 0,\n        timer: Timer(2000),\n        reverse: false,\n        next: function () {\n          if (this.timer.check()) this.reverse ? this.index-- : this.index++;\n\n          if (this.index >= 2) {\n            this.reverse = true;\n          }\n\n          if (this.index < 1) {\n            this.reverse = false;\n          }\n        }\n      }\n    };\n  }\n\n  draw(canvas, map) {\n    this.level(canvas, map);\n    this.drawWalls(canvas);\n    this.drawChest(canvas);\n    this.drawAnvil(canvas);\n    this.drawStove(canvas);\n    this.drawBed(canvas);\n    this.drawTable(canvas);\n    this.drawWaterWell(canvas);\n  }\n\n  createFloor(map) {\n    if (map) {\n      this.floor = [];\n      let level = map.body;\n\n      for (let x = level.pos.x; x <= level.size.x; x++) {\n        this.floor[x] = [];\n\n        for (let y = level.pos.y; y <= level.size.y; y++) {\n          this.floor[x][y] = homeImages.floor.panels[randomInt(0, 4)];\n        }\n      }\n    }\n  }\n\n  drawWalls(canvas) {\n    for (var x = 0; x <= 11; x++) {\n      this.render.img(homeImages.walls.vertical, 0, x * 33, 32, 32, canvas.ctx);\n      this.render.img(homeImages.walls.vertical, 328, x * 33, 32, 32, canvas.ctx);\n    }\n\n    for (x = 0; x <= 10; x++) {\n      if (x === 5 || x === 4 || x === 6) {\n        continue;\n      }\n\n      this.render.img(homeImages.walls.horizontal, x * 33, 0, 32, 32, canvas.ctx);\n      this.render.img(homeImages.walls.horizontal, x * 33, 400, 32, 32, canvas.ctx);\n    }\n  }\n\n  drawChest(canvas) {\n    this.render.img(homeImages.chest.open, this.pos.chest.x, this.pos.chest.y, 32, 32, canvas.ctx);\n  }\n\n  drawAnvil(canvas) {\n    this.render.img(homeImages.craft.anvil, this.pos.anvil.x, this.pos.anvil.y, 32, 32, canvas.ctx);\n  }\n\n  drawStove(canvas) {\n    this.render.img(homeImages.craft.stove, this.pos.stove.x, this.pos.stove.y, 32, 32, canvas.ctx);\n  }\n\n  drawBed(canvas) {\n    this.render.img(homeImages.bed.vertical, this.pos.bed.x, this.pos.bed.y, 32, 64, canvas.ctx);\n  }\n\n  drawTable(canvas) {\n    this.render.img(homeImages.table, this.pos.table.x, this.pos.table.y, 32, 64, canvas.ctx);\n  }\n\n  drawWaterWell(canvas) {\n    let x_start = this.pos.waterWell.x;\n    let y_start = this.pos.waterWell.y;\n    let main = homeImages.well.base.main;\n    let arms = homeImages.well.arms;\n    let emptyBucket = homeImages.well.bucket.empty;\n    let frontLayer = homeImages.well.base.frontLayer;\n    let handles = [homeImages.well.handles.one, homeImages.well.handles.two, homeImages.well.handles.three];\n    this.render.img(main, x_start, y_start, main.pos.width, main.pos.height, canvas.ctx);\n    this.render.img(arms, x_start - 13, y_start - 35, arms.pos.width, arms.pos.height, canvas.ctx);\n    this.render.img(emptyBucket, x_start + 20, y_start - 30 + this.pos.waterWell.index * 9.5, emptyBucket.pos.width, emptyBucket.pos.height - this.pos.waterWell.index * 5, canvas.ctx);\n    this.render.img(frontLayer, x_start, y_start + 15, frontLayer.pos.width, frontLayer.pos.height, canvas.ctx);\n    this.render.img(handles[this.pos.waterWell.index], x_start + 64, y_start - 42, handles[this.pos.waterWell.index].pos.width, handles[this.pos.waterWell.index].pos.height, canvas.ctx);\n    let button_x = 247;\n    let button_y = 36;\n    this.render.img(buttons.aquaButton, button_x, button_y, 50, 25, canvas.ctx);\n    this.render.text(\"Upgrade\", button_x + 7, button_y + 14, \"9\", canvas.ctx);\n    this.pos.waterWell.next();\n  }\n\n  level(canvas, map) {\n    if (map) {\n      if (!this.floor) {\n        this.createFloor(map);\n      }\n\n      let level = map.body;\n\n      for (let x = level.pos.x; x <= level.size.x; x++) {\n        for (let y = level.pos.y; y <= level.size.y; y++) {\n          this.render.img(this.floor[x][y], x * 32, y * 32, 32, 32, canvas.ctx);\n        }\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/ericbucheit/Desktop/idleForestV2/frontend/src/Components/Canvas/Draw/Level/Home/index.js"],"names":["homeImages","buttons","Render","Bank","Menu","randomInt","min","max","Math","floor","random","Timer","time","date","Date","expiration","getTime","reset","newTime","isDone","check","getTimeLeft","setExpiration","newExpiration","Home","constructor","render","bank","menu","pos","chest","x","y","anvil","stove","bed","table","waterWell","index","timer","reverse","next","draw","canvas","map","level","drawWalls","drawChest","drawAnvil","drawStove","drawBed","drawTable","drawWaterWell","createFloor","body","size","panels","img","walls","vertical","ctx","horizontal","open","craft","x_start","y_start","main","well","base","arms","emptyBucket","bucket","empty","frontLayer","handles","one","two","three","width","height","button_x","button_y","aquaButton","text"],"mappings":"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","sourcesContent":["import {homeImages, buttons} from '../../../../../Images'\nimport Render from '../../Render'\nimport Bank from \"./Bank\"\nimport Menu from './Menu'\nfunction randomInt(min, max) {\n   \treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction Timer (time) {\n    let date = new Date();\n    let expiration = date.getTime() + time;\n    return ({\n            date : date,\n            time : time,\n            expiration: expiration,\n            \n            reset: function() {\n                let date = new Date();\n                let newTime = date.getTime()\n                this.expiration = newTime + this.time;\n            },\n\n            isDone() {\n                let date = new Date();\n                let newTime = date.getTime()\n                if (newTime > this.expiration) {\n                    return (true)\n                }\n                return false;\n            },\n\n            check : function() {\n                if (this.isDone()) {\n                    this.reset();\n                    return (true)\n                }\n                return false\n            },\n\n            getTimeLeft() {\n                let date = new Date();\n                let newTime = date.getTime()\n                return (expiration - newTime);\n            },\n\n            setExpiration : function(newExpiration) {\n                this.time = newExpiration;\n                this.reset()\n            }\n        })\n}\n\n\nexport default class Home {\n\tconstructor() {\n\t\tthis.render = new Render();\n\t\tthis.floor = false;\n\t\tthis.bank = new Bank();\n\t\tthis.menu = new Menu();\n\t\tthis.pos = {\n\t\t\tchest : {\n\t\t\t\tx: 32,\n\t\t\t\ty: 32 * 4,\n\t\t\t},\n\t\t\tanvil : {\n\t\t\t\tx: 32,\n\t\t\t\ty: 32 * 8,\n\t\t\t},\n\t\t\tstove : {\n\t\t\t\tx: 32,\n\t\t\t\ty: 32 * 10,\n\t\t\t},\n\t\t\tbed : {\n\t\t\t\tx: 32 * 8,\n\t\t\t\ty: 32 * 10,\n\t\t\t},\n\t\t\ttable : {\n\t\t\t\tx: 32 * 8,\n\t\t\t\ty: 32 * 5,\n\t\t\t},\n\t\t\twaterWell : {\n\t\t\t\tx: 240,\n\t\t\t\ty: 80,\n\t\t\t\tindex : 0,\n\t\t\t\ttimer: Timer(2000),\n\t\t\t\treverse: false,\n\t\t\t\tnext : function() {\n\t\t\t\t\tif (this.timer.check()) this.reverse ? this.index-- : this.index++\n\t\t\t\t\tif (this.index >= 2) {\n\t\t\t\t\t\tthis.reverse = true\n\t\t\t\t\t}\n\t\t\t\t\tif (this.index < 1) {\n\t\t\t\t\t\tthis.reverse = false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tdraw(canvas, map) {\n\t\tthis.level(canvas, map);\n\t\tthis.drawWalls(canvas)\n\t\tthis.drawChest(canvas)\n\t\tthis.drawAnvil(canvas)\n\t\tthis.drawStove(canvas)\n\t\tthis.drawBed(canvas);\n\t\tthis.drawTable(canvas)\n\t\tthis.drawWaterWell(canvas)\n\t}\n\n\tcreateFloor(map) {\n\t\tif (map) {\n\t\t\tthis.floor = []\n\t\t\tlet level = map.body;\n\t \t\tfor (let x = level.pos.x; x <= level.size.x; x++) {\n\t \t\t\tthis.floor[x] = [];\n\t            for (let y = level.pos.y; y <= level.size.y; y++) {\n\t            \tthis.floor[x][y] = homeImages.floor.panels[randomInt(0,4)]\n\t            }\n\t        }\n\t\t}\n\t}\n\n\tdrawWalls(canvas) {\n        for (var x = 0; x <= 11; x++) {\n        \tthis.render.img(homeImages.walls.vertical, 0, x * 33, 32, 32, canvas.ctx)\n        \tthis.render.img(homeImages.walls.vertical, 328, x * 33, 32, 32, canvas.ctx)\n        }\n\n        for (x = 0; x <= 10; x++) {\n        \tif (x === 5 || x === 4 || x === 6) {\n        \t\tcontinue\n        \t}\n\n        \tthis.render.img(homeImages.walls.horizontal, x * 33, 0, 32, 32, canvas.ctx)\n       \t\tthis.render.img(homeImages.walls.horizontal, x * 33, 400, 32, 32, canvas.ctx)\n        }\n\t}\n\n\n\tdrawChest(canvas) {\n\t\tthis.render.img(homeImages.chest.open, this.pos.chest.x, this.pos.chest.y, 32, 32, canvas.ctx)\n\t}\n\n\n\tdrawAnvil(canvas) {\n\t\tthis.render.img(homeImages.craft.anvil, this.pos.anvil.x, this.pos.anvil.y, 32, 32, canvas.ctx)\n\t}\n\n\n\tdrawStove(canvas) {\n\t\tthis.render.img(homeImages.craft.stove, this.pos.stove.x, this.pos.stove.y, 32, 32, canvas.ctx)\n\t}\n\n\n\tdrawBed(canvas) {\n\t\tthis.render.img(homeImages.bed.vertical, this.pos.bed.x, this.pos.bed.y, 32, 64, canvas.ctx)\n\t}\n\n\tdrawTable(canvas) {\n\t\tthis.render.img(homeImages.table, this.pos.table.x, this.pos.table.y, 32, 64, canvas.ctx)\n\t}\n\n\tdrawWaterWell(canvas) {\n\t\tlet x_start = this.pos.waterWell.x;\n\t\tlet y_start = this.pos.waterWell.y\n\n\t\tlet main = homeImages.well.base.main;\n\t\tlet arms = homeImages.well.arms;\n\t\tlet emptyBucket = homeImages.well.bucket.empty;\n\t\tlet frontLayer = homeImages.well.base.frontLayer;\n\t\tlet handles = [\n\t\t\t\t\t\thomeImages.well.handles.one,\n\t\t\t\t\t\thomeImages.well.handles.two,\n\t\t\t\t\t\thomeImages.well.handles.three\n\t\t\t\t\t\t];\n\t\tthis.render.img(main, x_start, y_start, main.pos.width , main.pos.height ,canvas.ctx)\n\t\tthis.render.img(arms, x_start - 13, y_start - 35, arms.pos.width, arms.pos.height,canvas.ctx)\n\t\tthis.render.img(emptyBucket, x_start + 20, (y_start - 30) + (this.pos.waterWell.index * 9.5), emptyBucket.pos.width , emptyBucket.pos.height -(this.pos.waterWell.index * 5)  , canvas.ctx)\n\t\tthis.render.img(frontLayer, x_start, y_start + 15, frontLayer.pos.width, frontLayer.pos.height, canvas.ctx)\n\t\tthis.render.img(handles[this.pos.waterWell.index], x_start + 64, y_start - 42, handles[this.pos.waterWell.index].pos.width,handles[this.pos.waterWell.index].pos.height, canvas.ctx)\n\t\t\n\t\tlet button_x = 247;\n\t\tlet button_y = 36;\n\n\t\tthis.render.img(buttons.aquaButton, button_x, button_y, 50, 25,canvas.ctx)\n\t\tthis.render.text(\"Upgrade\", button_x + 7, button_y + 14, \"9\" , canvas.ctx)\n\t\tthis.pos.waterWell.next();\n\t}\n\n\n\tlevel(canvas, map) {\n        if (map) {\n        \tif (!this.floor) {\n        \t\tthis.createFloor(map);\n        \t}\n            let level = map.body;\n            for (let x = level.pos.x; x <= level.size.x; x++) {\n                for (let y = level.pos.y; y <= level.size.y; y++) {\n                    this.render.img(this.floor[x][y], x * 32, y * 32, 32, 32, canvas.ctx)\n                }\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}